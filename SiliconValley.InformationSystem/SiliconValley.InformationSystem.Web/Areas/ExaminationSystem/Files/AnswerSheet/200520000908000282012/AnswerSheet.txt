[{"questionid":"1031","answer":"\n\n                关于静态变量和非静态变量的区别静态变量：被static修饰的变量，加载类的时候被创建，不随对象的创建而改变，静态变量位于方法区，类消失对应的变量消失。非静态变量：不被static修饰的变量，每创建一次对象，就会为变量分配一次内存，存放在堆内存中，对象消失对应的变量消失。JAVA中初始化的顺序:加载类；静态变量初始化静态代码块；【其只能调度静态的，不能调度非静态的】成员变量构造代码块构造方法普通代码块\n\n\n            ","questionScores":"7.5"},{"questionid":"1033","answer":"\n\n                ： extern 修饰符用于声明 由程序集外部实现的成员函数经常用于系统API函数的调用（通过 DllImport ）。注意，和DllImport一 起使用时要加上 static 修饰符也可以用于对于同一程序集不同版本组件的调用（用 extern 声明别名） 不能与 abstract 修饰符同时使用 \n\n\n            ","questionScores":"7.5"},{"questionid":"1036","answer":"\n\n                密封类\n\n\n            ","questionScores":"4.5"},{"questionid":"1038","answer":"\n\n                索引器允许类或结构的实例就像数组一样进行索引。索引器形态类似于，不同之处在于它们的取值函数采用参数。这一功能在创建集合类的场合特别有用，而在其他某些情况下，比如处理大型文件或者抽象有些资源等，能让类具有类似数组行为也是非常有用的。\n\n\n            ","questionScores":"4.5"},{"questionid":"1041","answer":"\n\n                可以需使用 new 修饰符显式声明，表示隐藏了基类中该函数的实现或增加 override 修饰符，表示抽象重写了基类中该函数的实现\n\n\n            ","questionScores":"6"}]