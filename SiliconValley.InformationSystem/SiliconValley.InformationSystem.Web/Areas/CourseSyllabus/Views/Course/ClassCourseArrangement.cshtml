
@{
    ViewBag.Title = "ClassCourseArrangement";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using SiliconValley.InformationSystem.Entity.MyEntity
@section style{

    <style>
        #mywarp {
            position: relative;
            width: 99%;
            margin: 0 auto;
        }

        #mycontent {
            float: left;
            width: 90%;
            margin-top: 100px;
        }

        #left {
            float: left;
            width: 10%;
            height: 400px;
        }

        .courseItem {
            margin-top: 5px;
            border-bottom: 1px solid gray;
        }

        .class_name {
            margin: 10px auto;
        }

        .courseItem div {
            display: inline-block;
            margin-left: 50px;
        }

            .courseItem div label {
                font-size: 18px;
            }

        .item {
            margin-top: 50px;
        }
         
        .checkMore #flush {
            cursor: pointer;
        }


        #addBtnDiv {
            position: absolute;
            top: 60px;
            left: 60px;
        }
        
        #toor {
            position: absolute;
            top: 60px;
            left: 50%;
        }
    </style>

}

<div id="mywarp">

    <div id="addBtnDiv">
        <button id="addBtn" type="button" style="width:100px; height:50px;" class="layui-btn layui-btn-primary"><i style="font-size:30px;" class="layui-icon layui-icon-add-1"></i></button>
    </div>

    <div id="toor">
        <form class="layui-form">


            <div class="layui-form-item">
                <div class="layui-inline">

                    <span id="flush">刷新<i style="font-size:20px;" class="layui-icon layui-icon-refresh"></i></span>

                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">阶段</label>
                    <div class="layui-input-inline">
                        <select name="grand" id="grand" lay-filter="grand">
                            @{
                                foreach (var item in ViewBag.grandlist as List<Grand>)
                                {
                                    <option selected value="@item.Id">@item.GrandName</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">班级</label>
                    <div class="layui-input-inline">
                        <select name="classnumber" id="classnumber">
                           
                        </select>
                    </div>
                </div>
                <div class="layui-inline">
                    <input type="checkbox" name="open" lay-filter="status" lay-skin="switch" lay-text="禁用|启用">
                </div>

                <div class="layui-inline">
                    <button id="search" class="layui-btn layui-btn-primary" lay-submit lay-filter="search" type="button">搜索 </button>

                </div>
            </div>

        </form>
    </div>

    <div id="left">

    </div>
    <div id="mycontent">
        @*<form class="layui-form"></form>*@

        <table class="layui-hide" id="test" lay-filter="test"></table>
    </div>

</div>

<script type="text/template" id="muban">

    <div class="item" classteacherid="{{=classteacherid}}" classid="{{=classid}}">
        <div class="class_name">
            <h3>{{=className}}</h3>
        </div>

        <div class="courseItem">
            <div><label>课程：</label><span></span>{{=CourseName}}</div>
            <div><label>上课老师：</label><span></span>{{=TeacherName}}</div>
            <div><label>开始时间：</label><span></span>{{=BeginDate}}</div>
            <div><label>结束时间：</label><span></span>{{=EndDate}}</div>
            <div><label>状态：</label><span></span>{{=status}}</div>

            <div>
                <input type="checkbox" id="status" name="open" lay-filter="IsUsing" {{=checked}} lay-skin="switch" lay-text="禁用|启用">
            </div>

            <div class="checkMore" style="margin-left:90%;"><span class="layui-badge layui-bg-blue">查看更多</span></div>
        </div>
    </div>

</script>
<script type="text/template" id="selectDate">

    <div style="margin:100px auto;text-align:center;">
        <form class="layui-form">

            <input type="date" id="DateInput" />

            <button type="button" class="layui-btn layui-btn-primary" id="IsUsingBtn">确定</button>
        </form>
    </div>
   
</script>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="switchBtn">启用/禁用</a>
</script>
@section script{
    <script src="~/Areas/Teaching/Scripts/util.js"></script>

    <script src="~/Scripts/underscore.js"></script>
    <script>
        layui.use(['layer', 'flow', 'form','laydate','table'], function () {
            var form = layui.form;
            var layer = layui.layer;
            var flow = layui.flow;
            var laydate = layui.laydate;
            var table = layui.table;
            var TOPLAYER = undefined;
           

            //下拉框联动
            form.on('select(grand)', function (data) {
                var value = data.value;  //select选中的值
                console.log("选中值" + value);
                $.ajax({
                    url: "/CourseSyllabus/Course/ClassDataByGrand",
                    data: { grandid: value },
                    dataType: "json",
                    success: function (resultData) {



                        if (resultData.length > 0) {
                            //清空赋值
                            $("#classnumber").empty();
                            console.log(resultData);
                            $("#classnumber").append(new Option("请选择项目", ""));
                            $.each(resultData, function (index, item) {
                                
                                //赋值
                                $('#classnumber')
                                    .append(new Option(item.ClassNumber, item.id));
                            });
                        } else {
                            $("#classnumber").empty();
                            $("#classnumber").append(new Option("暂无数据", ""));
                        }

                        layui.form.render("select");
                    }
                });
            });
            layui.form.render("select");

            //flow.load({
            //    elem: '#mycontent' //指定列表容器
            //    , isAuto: true
            //    , done: function (page, next) {
            //        var lis = [];

            //        $.get('/CourseSyllabus/Course/ClassCourseArrangementData?page=' + page, function (res) {

            //            layui.each(res.data, function (index, item) {
            //                console.log(item);
            //                var status; var beginDate; var checked = "";

            //                if (item.IsDel == false) {
            //                    status = "正常";
            //                    checked = "checked";
            //                }
            //                else {
            //                    status: "过去式";
            //                }

            //                var dateutc = item.BeginDate.substr(item.BeginDate.indexOf('(') + 1, 13);
            //                beginDate = formaDateUtc(dateutc);

            //                var enddate = "未结束"

            //                if (item.EndDate != undefined && item.EndDate != null) {
                              
            //                    var enddateutc = item.EndDate.substr(item.EndDate.indexOf('(') + 1, 13);
            //                    enddate = formaDateUtc(enddateutc);
            //                }
                           

            //                var template = _.template($("#muban").html());
            //                var templateData = template({ classteacherid: item.ID, EndDate: enddate, classid: item.ClassNumber.id, className: item.ClassNumber.ClassNumber, CourseName: item.Skill.CourseName, TeacherName: item.Teacher.EmpName, BeginDate: beginDate, status: status, checked: checked });
            //                $("#mycontent form").append(templateData);

            //            });
            //            form.render();

            //            next(lis.join(''), page < res.total);
            //        });
            //    }
            //});
            var UsingData = undefined;

            function setColor(tableClassName) {
                var $table = $(tableClassName).eq(1);
               
                if ($table.length > 0) {
                    //遍历所有行
                    $table.find('tr').each(function () {
                        var open = $($(this).children('td')[8]).text();
                        console.log(open);
                        if (open == "未结束") {   //给状态为2的数据行设置背景色
                            $(this).attr('style', "background:green;color:#000");
                        }
                     

                        
                    })
                }
            }
          
            var IsUsing = undefined;
            table.render({
                elem: '#test'
                , id:"idTest"
                , url: '/CourseSyllabus/Course/ClassCourseArrangementData'
                , toolbar: '#toolbarDemo' //开启头部工具栏，并为其绑定左侧模板
                , title: '用户数据表'
                , cols: [[
                    { type: 'checkbox', fixed: 'left' }
                    , { field: 'ID', title: 'ID', width: 80, hide: true, fixed: 'left', unresize: true, sort: true }
                    , {
                        field: 'classid', title: '班级id',hide: true, width: 120, templet: function (res) { return res.ClassNumber.id;}
                    }
                    , { field: 'ClassNumber', title: '班级', width: 150, templet: function (res) { return res.ClassNumber.ClassNumber; }}
                    , {
                        field: 'CourseName', title: '课程', width: 80, templet: function (res) { return res.Skill.CourseName; }
                    }
                    , { field: 'TeacherName', title: '老师', width: 100, templet: function (res) { return res.Teacher.EmpName; } }
                    , {
                        field: 'BeginDate', title: '开始时间', templet: function (res) {
                            var dateutc = res.BeginDate.substr(res.BeginDate.indexOf('(') + 1, 13);
                            beginDate = formaDateUtc(dateutc); return beginDate;
                        }
                    }
                    , {
                        field: 'status', title: '状态', width: 80, templet: function (res) {

                            var status; 

                            if (res.IsDel == false) {

                                status = "正常";
                                
                            }
                            else {
                                status= "过去式";
                            }

                            return status
                        }
                    }
                    , { field: 'EndDate', title: '结束时间', width: 120, templet: function (res) {
                        var enddate = "未结束"

                        if (res.EndDate != undefined && res.EndDate != null) {

                            var enddateutc = res.EndDate.substr(res.EndDate.indexOf('(') + 1, 13);
                            enddate = formaDateUtc(enddateutc);
                        }
                        return enddate;

                    }
                    }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 150 }
                    
                 
                ]]
                , page: true
                //, done: function (res, curr, count) {
                //    console.log("zzzzzzz");
                //    setColor('.layui-table');
                //}
            });

            //监听行工具事件
            table.on('tool(test)', function (obj) {
                var data = obj.data;
                //console.log(obj)
                if (obj.event === 'switchBtn') {

                    UsingData = data;
                    //IsUsing = this.checked ? "true" : "false";

                    //选择时间
                    TOPLAYER = layer.open({
                        type: 1,
                        title: "选择日期",
                        area: ["300px", "400px"],
                        content: $("#selectDate").html(),
                        end: function () {
                            UsingData = undefined;
                            //IsUsing = undefined;
                        }
                    });
                } 
            });

            $(document).off("mouseout", '.item').on('mouseout', '.item', function () {

                $(this).find(".courseItem").css("background-color", '');
            });

            $(document).off("click", '.item').on('click', '.item', function () {

                $(this).find(".courseItem").attr("style", 'border-bottom:2px solid green');

                (this).attr("selected", 'selected');

                $(this).siblings().find(".courseItem").attr("style", '');
                $(this).siblings().attr("selected", '');


            });

            $("#addBtn").click(function () {

                var classid = 0;

                $(".item").each(function (index, elem) {

                    var select = $(this).attr("selected");

                    if (select == "selected") {
                        classid = $(elem).attr("classid");
                    }

                });



                layer.open({
                    type: 2,
                    area: ['800px', '500px'],
                    content: "/CourseSyllabus/Course/EditClassCourseArrangment?classid=" + classid,
                    end: function () {
                        window.location.reload();
                    }
                });

            });

          
            //监听指定开关
            form.on('switch(IsUsing)', function (data) {
                UsingData = data;
                IsUsing = this.checked ? "true" : "false";

                //选择时间
                TOPLAYER = layer.open({
                    type: 1,
                    title: "选择日期",
                    area: ["300px", "400px"],
                    content: $("#selectDate").html(),
                    end: function () {
                        UsingData = undefined;
                        IsUsing = undefined;
                    }
                });

               

            });

            $(document).off("click", '#IsUsingBtn').on('click', '#IsUsingBtn', function () {

                var selectDate = $("#DateInput").val();

                console.log(selectDate);

                if (selectDate == undefined || selectDate =="") {

                    layer.msg("请选择日期", {icon:2});
                    return;

                }

                
                var index = layer.load(2, { time: 10 * 1000 }); //又换了种风格，并且设定最长等待10秒
               
                var classteacherid = UsingData.ID;
                $.post("/CourseSyllabus/Course/UsingOrProhibit", {classteacherid: classteacherid, date: selectDate }, function (result) {

                    if (result.ErrorCode == 200) {
                        layer.msg('操作成功', { icon: 1 }, function () {
                            layer.close(index);

                            window.location.reload();

                        });
                    }
                    else {
                        layer.msg('服务器错误', { icon: 2 }, function () {
                            layer.close(index);
                        });
                    }
                });

            });

            form.on('submit(search)', function (data) {

                
                
                var field = data.field;

                var status = false;

                var grandid = $("#grand").val();
                console.log(grandid);

                if (field.open == "on") {
                    status = true;
                }
              
                table.reload('idTest', {
                    url: '/CourseSyllabus/Course/SearchClassCourseArrangementData'
                    , where: {
                        classid: field.classnumber,
                        status: status,
                        grandId: grandid
                    } 
                    
                });
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });

            $("#flush").click(function () {
                var index = layer.load(2, { time: 10 * 1000 }); //又换了种风格，并且设定最长等待10秒
                window.location.reload();

            });

            $(document).off("mouseover", '#flush').on('mouseover', '#flush', function () {
                
                $(this).attr("style", 'color:blue');
            });

       
            $(document).off("mouseout", '#flush').on('mouseout', '#flush', function () {

                $(this).attr("style", '');
            });

        });
    </script>
}

