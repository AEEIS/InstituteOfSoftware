
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div >
    <button type="button" id="butbiao" class="layui-btn">表格展示</button>
    <button type="button" id="butbing"  class="layui-btn">图像展示</button>
</div>
<form class="layui-form" action="">
    <div class="layui-carousel-left">
        <div class="layui-row ">

           
            <div class="layui-row layui-form-item">

                <div class="layui-col-xs2.5">

                    <label class="layui-form-label" style="width:100px">班级名称</label>
                    <div class="layui-input-inline">
                        @Html.DropDownList("ClassName", ViewBag.ClassName as SelectList, "请选择", new Dictionary<string, object>() { { "name", "ClassName" } })


                    </div>
                </div>
                <div class="layui-col-xs2.5">
                    <label class="layui-form-label">姓名</label>
                    <div class="layui-input-inline">
                        <input type="tel" name="Name" lay-verify="Name" id="Name" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-col-xs3">

                    <label class="layui-form-label">学号</label>
                    <div class="layui-input-block">
                        <input type="text" lay-verify="identityi" style="width:200px;" name="identitydocument" class="layui-input" />

                    </div>

                </div>

                <div class="layui-col-xs4">

                    <label class="layui-form-label" style="width:100px">出勤标题</label>
                    <div class="layui-input-inline">
                        <select name="AttendanceTitle" id="AttendanceTitle" lay-search="">
                            <option value="">请选择出勤状态</option>
                            <option value="早操出勤">早操出勤</option>
                            <option value="上课出勤">上课出勤</option>
                            <option value="晚自习出勤">晚自习出勤</option>

                        </select>


                    </div>
                </div>
            </div>
                <div class="layui-row layui-form-item">
                    <div class="layui-col-xs2.5">
                        <label class="layui-form-label" style="width:100px;">出勤状态</label>
                        <div class="layui-input-inline">
                            <select name="Attendancestatus" id="Attendancestatus" lay-search="">
                                <option value="">请选择出勤状态</option>
                                <option value="迟到">迟到</option>
                                <option value="早退">早退</option>
                                <option value="缺勤">缺勤</option>
                                <option value="请假">请假</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-col-xs4">


                        <div class="layui-inline">
                            <label for="" class="layui-form-label">时间段</label>
                            <div class="layui-input-inline startTime">
                                <input type="text" name="qBeginTime" id="qBeginTime" readonly="readonly" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                            </div>
                            <div class="layui-form-mid">到</div>
                            <div class="layui-input-inline endTime">

                                <input type="text" name="qEndTime" id="qEndTime" readonly="readonly" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                            </div>
                        </div>

                    </div>


                </div>
                    <div style="position:absolute;left:85%;top:104px;">
                        <button class="layui-btn" lay-submit="" type="button" lay-filter="demo2">查询</button>
                    </div>


                

           

        </div>
    </div>
</form>
<div id="nutext">
    <table class="layui-hide" id="test" lay-filter="test"></table>
</div>

<div height="400" width="600" style="margin:50px">
    <canvas id="chart" style="display:none"> 你的浏览器不支持HTML5 canvas </canvas>
</div>
<script src="~/Areas/Obtainemployment/Scripts/Drawing.js"></script>
@section script{}
    @*头部工具栏*@
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="getAdd"><i class="layui-icon">&#xe654;</i>登记出勤</button>



        </div>
    </script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="select">详细</a>

    </script>
    <script>
        Bing("");
        function Bing(datas) {
           
            $.post("/Teachingquality/StudentAttendanc/MyDate", datas, function (data) {
                var x = jsontoarr(data);
                goChart(x);
            })
        }
        function GetPartsItmes() {
            
            var Name = $("#Name").val();
            var AttendanceTitle = $("#AttendanceTitle").val();
            var ClassName = $("#ClassName").val();
            var identitydocument = $("#identitydocument").val();
           
            var qBeginTime = $("#qBeginTime").val();
            var qEndTime = $("#qEndTime").val();
            var data =  {
                Name: Name,
                AttendanceTitle: AttendanceTitle,
                ClassName: ClassName,
                identitydocument: identitydocument,
           
                qBeginTime: qBeginTime,
                qEndTime: qEndTime
            };
            console.log(data);
            Bing(data)
          
        }
        //时间转换方法
        function TimeChange(newtime) {
            if (newtime == null)
                return "";
            var date = new Date(parseInt(newtime.slice(6)));
            var year = date.getFullYear();
            var month = date.getMonth();
            if (month < 10) {
                month = "0" + (parseInt(month) + 1);
            }
            var day = date.getDate();
            if (day < 10) {
                day = "0" + day;
            }
            var result = year + '-' + month + '-' + day;
            return result;
        }

        //月份小于10的前面加个0
        function MoDay(a) {
            if (a < 10) {
                return "0" + a;
            }
            return a;
        }
        layui.use(['table', 'layer', 'laydate', 'tree', 'form'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;


            ////系统时间

            var curDate = new Date();
            var curYearMonthrDay = curDate.getFullYear() + "-" + MoDay(parseInt(curDate.getMonth()) + 1) + "-" + MoDay(parseInt(curDate.getDate()));

            // 时间选择器初始化 开始时间
            laydate.render({
                elem: '#qBeginTime',
                format: 'yyyy-MM-dd',
                done: function (value, date, endDate) {

                    var startDate = new Date(value).getTime();
                    var endTime = new Date($('#qEndTime').val()).getTime();

                    // console.log(ri);
                    if (endTime < startDate) {
                        layer.msg('结束时间不能小于开始时间');
                        $('#qBeginTime').val($('#qEndTime').val());
                    }
                    if (startDate > curDate.getTime()) {
                        layer.msg('开始时间不能大于当前时间');
                        $('#qBeginTime').val(curYearMonthrDay);
                    }
                }
            })
            // 时间选择器初始化 结束时间
            laydate.render({ //结束时间
                elem: '#qEndTime',
                format: 'yyyy-MM-dd',
                done: function (value, date, endDate) {
                    var startDate = new Date($('#qBeginTime').val()).getTime();
                    var endTime = new Date(value).getTime();
                    if (endTime < startDate) {
                        layer.msg('结束时间不能小于开始时间');
                        $('#qEndTime').val($('#qBeginTime').val());
                    }
                    if (endTime > curDate.getTime()) {
                        layer.msg('结束时间不能大于当前时间');
                        $('#qEndTime').val(curYearMonthrDay);
                    }
                }
            })
            //正则表达式
            form.verify({
                Name: function (value, item) { //value：表单的值、item：表单的DOM对象

                    if (!/^[^\s]*$/.test(value)) {
                        return '内容不能输入空格';
                    } else {
                        if (value == '') {
                            return '';
                        } else {
                            if (!new RegExp("^[a-zA-Z0-9_\u4e00-\u9fa5\\s·]+$").test(value)) {
                                return '姓名不能有特殊字符';
                            }
                            if (/(^\_)|(\__)|(\_+$)/.test(value)) {
                                return '姓名首尾不能出现下划线\'_\'';
                            }
                            if (!/^[a-zA-Z\u4e00-\u9fa5]+$/.test(value)) {
                                return '姓名只能由中文或字母注册';
                            }
                        }
                    }

                }
                , identityi: function (value) {
                    if (!/^[^\s]*$/.test(value)) {
                        return '内容不能输入空格';
                    } else {
                        if (value == '') {
                            return '';
                        } else {
                            var identitydocument = /^\d{17}/;
                            if (!identitydocument.test(value)) {
                                return '请输入十七位数学号';
                            }

                        }
                    }

                }
            });
            //表格渲染
            table.render({
                elem: '#test'
                , url: '/Teachingquality/StudentAttendanc/GetDate'
                , toolbar: '#toolbarDemo'
                , id: 'idTest'
                , page: true
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , cols: [[
                    { type: 'radio' }
                    , { field: 'Stuclass', title: '班级 ' }
                    , { field: 'Attendancestatus', title: '出勤状态', sort: true }
                    , { field: 'AttendanceTitle', title: '出勤类型' }
                    , { field: 'Name', title: '学员姓名 ' }
                    , {
                        field: 'InspectionDate', title: '检查日期', templet: function (c) {
                            return TimeChange(c.InspectionDate);
                        }
                    }
                    , { field: 'StudentID', title: '学员学号' }
                    , { field: 'Registrar', title: '登记人工号' }
                    , { field: 'RegistrarName', title: '登记人姓名' }
                ]]
                , page: true
                , limit: 15
                , limits: [15, 20, 25]
            });
            //添加
            function Registeredtrainees(name, id) {

                layer.open({
                    title: name,
                    type: 2,
                    area: ['680px', '540px']
                    , content: "/Teachingquality/StudentAttendanc/Registerattendance?id=" + id
                    , end: function () { table.reload('idTest'); select(); }
                    , anim: 1,
                    //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                });
            }
            //监听头部工具栏
            table.on('toolbar(test)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'getAdd':
                        var a = "登记出勤记录";
                        Registeredtrainees(a);
                        break;
                    case 'getUpdate':


                        if (checkStatus.data.length > 0) {
                            var a = "编辑出勤记录"
                            var id = checkStatus.data[0].StudentID;
                            console.log(id);
                        } else {
                            layer.alert('请选择一条数据', { icon: 0 });
                        }
                        break;
                };
            });
            //监听工作条
            table.on('tool(test)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'select') { //查看

                    layer.open({
                        title: name,
                        type: 2,
                        area: ['500px', '830px']
                        , content: "/Teachingquality/StudentInformation/Viewdetails?id=" + data.StudentNumber

                        //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                    });
                }

            });

            //查询功能
            form.on('submit(demo2)', function (data) {

                var x = data.field;
                console.log(x);
                Bing(x)
                table.reload('idTest', {
                    where: {
                        Name: x.Name,
                        Attendancestatus: x.Attendancestatus,
                        qBeginTime: x.qBeginTime,
                        identitydocument: x.identitydocument,
                        qEndTime: x.qEndTime,
                        ClassName: x.ClassName,
                        AttendanceTitle: x.AttendanceTitle
                    }, page: {
                        curr: 1
                    }
                });
                return false;
            });
        });
        $("#butbiao").click(function () {
         
            $("#nutext").css("display", "block");
            $("#chart").css("display", "none");
        });
        $("#butbing").click(function () {

            $("#nutext").css("display", "none");
            $("#chart").css("display", "block");
            
        });
    </script>

  


