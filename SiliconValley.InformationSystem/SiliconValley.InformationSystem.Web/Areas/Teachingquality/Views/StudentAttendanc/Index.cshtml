
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form class="layui-form" action="">
    <div class="layui-container">
        <div class="layui-row " >

            <div class="layui-col-xs12">
                <div class="layui-row layui-form-item">


                    <div class="layui-col-xs4">
                        <label class="layui-form-label">姓名</label>
                        <div class="layui-input-inline">
                            <input type="tel" name="Name" lay-verify="Name" id="Name" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-col-xs4">
                       
                            <label class="layui-form-label" style="width:100px">出勤标题</label>
                            <div class="layui-input-inline">
                                <select name="Attendancestatus" lay-verify="required" lay-search="">
                                    <option value="">请选择出勤状态</option>
                                    <option value="早操出勤">早操出勤</option>
                                    <option value="上课出勤">上课出勤</option>
                                    <option value="晚自习出勤">晚自习出勤</option>

                                </select>
                         

                        </div>
                    </div>
                    <div class="layui-col-xs4">
                        <label class="layui-form-label" style="width:100px">出勤状态</label>
                        <div class="layui-input-inline">
                            <select name="Attendancestatus" lay-verify="required" lay-search="">
                                <option value="">请选择出勤状态</option>
                                <option value="迟到">迟到</option>
                                <option value="早退">早退</option>
                                <option value="缺勤">缺勤</option>
                                <option value="请假">请假</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-col-xs6">

                     
                        <div class="layui-inline">
                            <label for="" class="layui-form-label">时间段</label>
                            <div class="layui-input-inline startTime">
                                <input type="text" name="tydate" id="tydate" lay-verify="date" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                            </div>
                            <div class="layui-form-mid">到</div>
                            <div class="layui-input-inline endTime">
                              
                                <input type="text" name="mydate" id="mydate" lay-verify="date" placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                            </div>
                        </div>

                    </div>
               
                 

                    <div class="layui-col-xs4">

                        <label class="layui-form-label">学号</label>
                        <div class="layui-input-block">
                            <input type="text" lay-verify="identityi" name="identitydocument" class="layui-input linu" />

                        </div>

                    </div>
                    <div style="position:absolute;left:90%;top:20px;">
                        <button class="layui-btn" lay-submit="" type="button" lay-filter="demo2">查询</button>
                    </div>


                </div>

            </div>

        </div>
    </div>
</form>

<table class="layui-hide" id="test" lay-filter="test"></table>
@section script{
    @*头部工具栏*@
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="getAdd"><i class="layui-icon">&#xe654;</i>登记出勤</button>
           
  

        </div>
    </script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="select">详细</a>

    </script>
    <script>
        //时间转换方法
        function TimeChange(newtime) {
            if (newtime == null)
                return "";
            var date = new Date(parseInt(newtime.slice(6)));
            var year = date.getFullYear();
            var month = date.getMonth();
            if (month < 10) {
                month = "0" + (parseInt(month) + 1);
            }
            var day = date.getDate();
            if (day < 10) {
                day = "0" + day;
            }
            var result = year + '-' + month + '-' + day;
            return result;
        }

     
        layui.use(['table', 'layer','laydate', 'tree', 'form'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            laydate.render({
                elem: '#mydate',
              
            });
            laydate.render({
                elem: '#tydate'
            });
          
            //正则表达式
            form.verify({
                Name: function (value, item) { //value：表单的值、item：表单的DOM对象
                    if (value == '') {
                        return '';
                    } else {
                        if (!new RegExp("^[a-zA-Z0-9_\u4e00-\u9fa5\\s·]+$").test(value)) {
                            return '姓名不能有特殊字符';
                        }
                        if (/(^\_)|(\__)|(\_+$)/.test(value)) {
                            return '姓名首尾不能出现下划线\'_\'';
                        }
                        if (!/^[a-zA-Z\u4e00-\u9fa5]+$/.test(value)) {
                            return '姓名只能由中文或字母注册';
                        }
                    }
                },//(^$)|^\d{10}$/
                identityi: function (value) {
                    if (value == '') {
                        return '';
                    } else {
                        var identitydocument = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
                        if (!identitydocument.test(value)) {
                            return '请输入正确身份证号';
                        }
                    }
                },
                number: function (value) {
                    if (value == '') {
                        return '';
                    } else {


                        //var identitydocument = /^\d{17}/;
                        //if (!identitydocument.test(value)) {
                        //    return '请输入十七位数学号';
                        //}
                        var identitydocument = /^\d/;
                        if (!identitydocument.test(value)) {
                            return '学号由数字组成';
                        }
                    }
                }
            });
            //表格渲染
            table.render({
                elem: '#test'
                , url: '/Teachingquality/StudentAttendanc/GetDate'
                , toolbar: '#toolbarDemo'
                , id: 'idTest'
                , page: true
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , cols: [[
                    { type: 'radio' }
                    , { field: 'Stuclass', title: '班级 ' }
                    , { field: 'Attendancestatus',  title: '出勤状态', sort: true }
                    , { field: 'AttendanceTitle',  title: '出勤类型' }
                    , { field: 'Name', title: '学员姓名 ' }
                    , {
                        field: 'InspectionDate',  title: '检查日期', templet: function (c) {
                            return TimeChange(c.InspectionDate);
                        }
                    }
                    , { field: 'StudentID', title: '学员学号' }
                    , { field: 'Registrar',  title: '登记人工号' }
                    , { field: 'RegistrarName', title: '登记人姓名' }
                ]]
                , page: true
                , limit: 8
                , limits: [8, 10, 15]
            });
            //注册或编辑学员信息
            function Registeredtrainees(name, id) {

                layer.open({
                    title: name,
                    type: 2,
                    area: ['680px', '740px']
                    , content: "/Teachingquality/StudentAttendanc/Registerattendance?id=" + id
                    , end: function () { table.reload('idTest'); select(); }
                    , anim: 1,
                    //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                });
            }
            //监听头部工具栏
            table.on('toolbar(test)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'getAdd':
                        var a = "登记出勤记录";
                        Registeredtrainees(a);
                        break;
                    case 'getUpdate':


                        if (checkStatus.data.length > 0) {
                            var a = "编辑出勤记录"
                            var id = checkStatus.data[0].StudentID;
                            console.log(id);
                        } else {
                            layer.alert('请选择一条数据', { icon: 0 });
                        }
                        break;
                };
            });
            //监听工作条
            table.on('tool(test)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'select') { //查看

                    layer.open({
                        title: name,
                        type: 2,
                        area: ['500px', '830px']
                        , content: "/Teachingquality/StudentInformation/Viewdetails?id=" + data.StudentNumber

                        //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                    });
                }

            });

            //查询功能
            form.on('submit(demo2)', function (data) {

                var x = data.field;


                table.reload('idTest', {
                    where: {
                        Name: x.Name,
                        Sex: x.Sex,
                        StudentNumber: x.StudentNumber,
                        identitydocument: x.identitydocument
                    }, page: {
                        curr: 1
                    }
                });
                return false;
            });
        });
    </script>

}
