
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<h2>Index</h2>
<table class="layui-hide" id="test" lay-filter="test"></table>


@section script{
    @*头部工具栏*@
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="getAdd"><i class="layui-icon">&#xe654;</i>学员注册</button>
            <button class="layui-btn layui-btn-sm" lay-event="getUpdate"> <i class="layui-icon">&#xe642;</i>编辑学员信息</button>

        </div>
    </script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs" lay-event="select">详细</a>
 
    </script>
    <script>
        //时间转换方法
        function TimeChange(newtime) {
            if (newtime == null)
                return "";
            var date = new Date(parseInt(newtime.slice(6)));
            var year = date.getFullYear();
            var month = date.getMonth();
            if (month < 10) {
                month = "0" + (parseInt(month) + 1);
            }
            var day = date.getDate();
            if (day < 10) {
                day = "0" + day;
            }
            var result = year + '-' + month + '-' + day;
            return result;
        }
        //计算年龄
        function Age(strBirthday) { //传入形式yyyy-MM-dd
            //strBirthday = util.formatTime(strBirthday);转换成yyyy-MM-dd形式
            var returnAge
            var strBirthdayArr = strBirthday.split('-')
            var birthYear = strBirthdayArr[0]
            var birthMonth = strBirthdayArr[1]
            var birthDay = strBirthdayArr[2]
            var d = new Date()
            var nowYear = d.getFullYear()
            var nowMonth = d.getMonth() + 1
            var nowDay = d.getDate()
            if (nowYear == birthYear) {
                returnAge = 0 //同年 则为0岁
            } else {
                var ageDiff = nowYear - birthYear //年之差
                if (ageDiff > 0) {
                    if (nowMonth == birthMonth) {
                        var dayDiff = nowDay - birthDay //日之差
                        if (dayDiff < 0) {
                            returnAge = ageDiff - 1
                        } else {
                            returnAge = ageDiff
                        }
                    } else {
                        var monthDiff = nowMonth - birthMonth //月之差
                        if (monthDiff < 0) {
                            returnAge = ageDiff - 1
                        } else {
                            returnAge = ageDiff
                        }
                    }
                } else {
                    returnAge = -1 //返回-1 表示出生日期输入错误 晚于今天
                }
            }
            return returnAge //返回周岁年龄
        }
        layui.use(['table', 'layer', 'tree', 'form'], function () {
            var table = layui.table;
            var layer = layui.layer;
            table.render({
                elem: '#test'
                , url: '/Teachingquality/StudentInformation/GetDate'
                , toolbar: '#toolbarDemo'
                , id: 'idTest'
                , page: true
                , cellMinWidth: 80 //全局定义常规单元格的最小宽度，layui 2.2.1 新增
                , cols: [[
                    { type: 'radio' }
                    , { field: 'StudentNumber', width: 180, title: '学号', sort: true }
                    , { field: 'Name', width: 80, title: '姓名' }
                    , {
                        field: 'Sex', width: 80, title: '性别', templet: function (c) {
                            if (c.Sex == 0) {
                                return "女";
                            } else { return "男"; }
                        }
                    }
                    , {
                        field: 'BirthDate', width: 80, title: '年龄', templet: function (c) {
                            return Age(TimeChange(c.BirthDate));
                        }
                    }

                    , { field: 'Nation', width: 80, title: '民族 ' }
                    , { field: 'Education', width: 80, title: '学历 ' }
                    , { field: 'Telephone', width: 180, title: '电话号' }
                    , { field: 'qq', width: 180, title: 'qq' }
                    , { field: 'WeChat', width: 180, title: '微信' }

                    , { field: 'Familyaddress', width: 280, title: '家庭住址 ' }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 150 }


                    //, { field: 'State', width: 80, title: '状态' }
                    //, { field: 'identitydocument', width: 80, title: '身份证号', sort: true }
                    //, { field: 'InsitDate', width: 180, title: '注册时间 ' }
                    //, { field: 'Reack', width: 80, title: '备注' }
                    //, { field: 'Traine', width: 180, title: '学员性格 ' }
                    //, { field: 'Hobby', width: 180, title: '兴趣爱好 ' }
                ]]
            });


            function Registeredtrainees(name, id) {

                layer.open({
                    title: name,
                    type: 2,
                    area: ['1000px', '800px']
                    , content: "/Teachingquality/StudentInformation/Registeredtrainees?id=" + id
                    , end: function () { table.reload('idTest'); select(); }
                    //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                });
            }
            //监听头部工具栏
            table.on('toolbar(test)', function (obj) {
                switch (obj.event) {
                    case 'getAdd':
                        var a = "注册学员";
                        Registeredtrainees(a);
                        break;
                    case 'getUpdate':
                        var checkStatus = table.checkStatus(obj.config.id);

                        if (checkStatus.data.length > 0) {
                            var a = "编辑学员信息"
                            var id = checkStatus.data[0].StudentNumber;
                            Registeredtrainees(a, id);
                        } else {
                            layer.alert('请选择一条数据', { icon: 0 });
                        }
                        break;


                };
            });
            //监听工作条
            table.on('tool(test)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'select') { //查看
                
                    layer.open({
                        title: name,
                        type: 2,
                        area: ['500px', '600px']
                        , content: "/Teachingquality/StudentInformation/Viewdetails?id=" + data.StudentNumber 
                     
                        //这里content是一个DOM，注意：最好该元素要存放在body最外层，否则可能被其它的相对元素所影响
                    });
                }

            });
        });
    </script>

}


