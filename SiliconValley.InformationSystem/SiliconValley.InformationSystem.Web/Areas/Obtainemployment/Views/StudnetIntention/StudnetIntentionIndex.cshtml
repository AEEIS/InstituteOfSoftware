
@{
    ViewBag.Title = "SelfObtainRcoredIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    #procontent {
        width: 100%;
        height: 800px;
        /*border: 1px solid pink;*/
    }

    #protree {
        width: 19%;
        height: 100%;
        /*border: 1px solid pink;*/
        float: left;
    }

    #prouninhabited {
        width: 80%;
        height: 100%;
        /*border: 1px solid pink;*/
        float: left;
        margin-left: 10px;
    }
</style>

<link href="~/Scripts/dtree2.5.4/layui_ext/dtree/dtree.css" rel="stylesheet" />
<link href="~/Scripts/dtree2.5.4/layui_ext/dtree/font/dtreefont.css" rel="stylesheet" />
<div id="procontent">
    <div id="protree">
        <ul id="demoTree" class="dtree" data-id="0"></ul>
    </div>
    <div id="prouninhabited">
        <div id="topdiv">
            <div id="mystudentwhytop">
                <form class="layui-form" action="">
                    <div class="layui-form-item">
                        <div class="layui-inline" id="mubandiv">
                            <label class="layui-form-label" id="querylable" style="width:100px">搜索选择框</label>
                            <div class="layui-input-inline" style="width:156px">
                                <input type="text" name="name0" id="name0"  placeholder="请输入学生姓名" autocomplete="off" class="layui-input">
                            </div>

                            <button class="layui-btn layui-btn-radius layui-btn-normal layui-btn" lay-submit="" lay-filter="btn0">搜索</button>

                        </div>

                    </div>
                </form>
            </div>
        </div>
        <div id="tablediv">
            <div id="table00div">
                <table class="layui-hide" id="table00" lay-filter="table00"></table>
            </div>
        </div>
    </div>

</div>
<div id="divimg" style="width:800px;height:800px;">
    <img id="showImage" />
</div>

@section script{

    @*右侧按钮*@
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-warm layui-btn-radius layui-btn-xs" lay-event="edit">修改</a>
        <a class="layui-btn layui-btn-danger layui-btn-radius layui-btn-xs" lay-event="del">删除</a>
    </script>
    <script type="text/html" id="toolbarDemo">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="add">添加学生意向</button>
        </div>
    </script>

    <script src="~/Scripts/underscore.js"></script>
    <script>
        layui.extend({
            dtree: '{/}/Scripts/dtree2.5.4/layui_ext/dist/dtree'   // {/}的意思即代表采用自有路径，即不跟随 base 路径
        }).use(['dtree', 'layer', 'jquery', 'form', 'table'], function () {
            var dtree = layui.dtree, layer = layui.layer, $ = layui.jquery, form = layui.form, table = layui.table;

            var empQuarterclassid, treedata, myleave, string1 = "", string2, table00, studentdata, studentname, isbtn = false;
            //初始化树
            var myDTree = dtree.render({
                elem: "#demoTree",
                initLevel: 1,
                url: '/Obtainemployment/SelfObtainRcored/EstablishTree',
                success: function (res, $obj, first) {
                    // res:当前异步加载的数据，
                    //$obj:当前组件的根节点的JQuery对象，
                    //first:是否首次加载。
                    //console.log(res);
                    //console.log($obj);
                    //console.log(first);
                    empQuarterclassid = res.data[0].children[0].children[0].nodeId;
                    myleave = 1;
                    string2 = res.data[0].nodeId;
                    treedata = res.data;
                    loadtable();
                },
                formatter: {
                    title: function (data) {  // 示例给有子集的节点返回节点统计
                        var s = data.context;
                        if (data.children) {
                            s += ' <span style=\'color:blue\'>(' + data.children.length + ')</span>';
                        }
                        return s;
                    }
                },
                nodeIconArray: { "3": { "open": "dtree-icon-pulldown", "close": "dtree-icon-pullup" } },  // 自定扩展的二级非最后一级图标，从1开始
                leafIconArray: { "11": "dtree-icon-star" },  // 自定义扩展的二级最后一级图标，从11开始
                icon: ["3", "11"], // 使用
                response: { statusCode: 200, rootName: "data", treeId: "nodeId", title: "context" }
            });
            //时间转化
            function TimeChange(newtime) {
                if (newtime == null)
                    return "";
                var date = new Date(parseInt(newtime.slice(6)));
                var year = date.getFullYear();
                var month = date.getMonth();
                if (month < 10) {
                    month = Number(month + 1);
                }
                var day = date.getDate();
                if (day < 10) {
                    day = day;
                }
                var result = year + '-' + month + '-' + day;
                return result;
            }

            function loadtable() {
                table00 = table.render({
                    elem: '#table00'
                    , url: '/Obtainemployment/StudnetIntention/table00?leave=' + myleave + '&string2=' + string2
                    , skin: 'line' //行边框风格
                    , even: true //开启隔行背景
                    , limit: 20
                    , limits: [10, 20, 30, 45, 60, 75]
                    , page: true
                    , toolbar: '#toolbarDemo'
                    , done: function (res, curr, count) {
                        studentdata = res.data;
                    }
                    , cols: [[ //标题栏
                        { field: 'ID', title: '意向id'/*, width: 180*/, hide: true }
                        , { field: 'StudentName', title: '学生姓名', width: 90 }
                        , { field: 'sex', title: '性别', width: 70 }
                        , { field: 'Telephone', title: '联系方式', width: 117 }
                        , { field: 'Relationship', title: '亲属关系', width: 90 }
                        , { field: 'RelativesName', title: '亲属名字', width: 90 }
                        , { field: 'Familyphone', title: '亲属电话', width: 117 }
                        , { field: 'Nation', title: '籍贯', width: 80 }
                        , { field: 'StuSchoolName', title: '毕业学校', width: 156 }
                        , { field: 'AreaName', title: '意向城市', width: 90 }
                        , { field: 'Salary', title: '意向薪资', width: 90 }
                        , { field: 'identitydocument', title: '身份证', width: 175 }
                        , {
                            field: 'Date', title: '记录时间', width: 115, templet: function (d) {
                                return TimeChange(d.Date);
                            }
                        }
                        , { fixed: 'right', title: '操作', toolbar: '#barDemo', width: 120 }
                    ]]
                });
            }

            //绑定节点点击
            dtree.on("node('demoTree')", function (obj) {
                isbtn = false;
                string1 = "";
                studentname = "";
                $("#name0").val("");
                //console.log(obj);
                var dtreeobj = obj.param;
                myleave = dtreeobj.level;
                string2 = dtreeobj.nodeId;
                switch (dtreeobj.level) {
                    //最外层
                    case '1':
                        for (var i = 0; i < treedata.length; i++) {
                            if (treedata[i].nodeId == dtreeobj.nodeId) {
                                empQuarterclassid = treedata[i].children[0].children[0].nodeId;
                                break;
                            }
                        }

                        break;
                    //中间层
                    case '2':
                        empQuarterclassid = obj.childParams[0].nodeId;

                        break;
                    //最里层
                    case '3':

                        empQuarterclassid = dtreeobj.nodeId;
                        string2 = dtreeobj.nodeId;
                        break;
                }
                loadtable00();
                //console.log(empQuarterclassid);
            });

            table.on('toolbar(table00)', function (obj) {

                switch (obj.event) {
                    case 'add':
                        layer.open({
                            type: 2,
                            content: "/Obtainemployment/StudnetIntention/add?param0=" + empQuarterclassid,
                            title: "添加谈话",
                            area: ['730px', '530px'],
                            //area: ['850px', '760px'],
                            success: function (layero, index) {
                            },
                            end: function () {
                                loadtable00();
                            }
                        });
                        break;
                };
            });

            //监听工具条
            table.on('tool(table00)', function (obj) {
                var data = obj.data;
                if (obj.event == 'edit') {
                    layer.open({
                        type: 2,
                        content: "/Obtainemployment/StudnetIntention/uptstudnetintention?param0=" + data.ID,
                        title: "修改学生意向",
                        area: ['680px', '330px'],
                        success: function (layero, index) {
                            //let body = layui.layer.getChildFrame('body', index);
                            //body.find("#classnumnber").val(clickclassnumber);
                        },
                        end: function () {
                            loadtable00();
                        }
                    });
                } else if(obj.event == 'del') {
                    layer.confirm('真的删除行么', function (index) {
                        $.ajax({
                            url: '/Obtainemployment/StudnetIntention/del',
                            //async: false,
                            data: { param0: data.ID },
                            success: function (successdata) {
                                if (successdata.Success) {
                                    layer.msg('操作成功！', { icon: 6, time: 2000 }, function () {

                                    });
                                } else {
                                    layer.msg(successdata.Msg, { icon: 6, time: 2000 }, function () {

                                    });
                                }
                                loadtable00();
                            },
                            error: function (errordata) {
                                layer.msg('网络不佳!', { icon: 6, time: 2000 }, function () {

                                });
                            }
                        });
                    });
                }
            });

            //重新加载表格数据 url
            function loadtable00() {
                table00.reload({
                    url: '/Obtainemployment/StudnetIntention/table00'
                    , done: function (res, curr, count) {
                         if (!isbtn) {
                            console.log('join');
                            studentdata = res.data;
                        }
                    }
                    , where: {
                        leave: myleave,
                        string1: string1,
                        string2: string2
                    }
                    , page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }

            //名字查询
            form.on('submit(btn0)', function (data) {
                var iscun = false;
                isbtn = true;
                studentname = data.field.name0;
                string1 = "";
                if (studentname == "") {
                    isbtn = false;
                    loadtable00();
                } else {
                    for (var i = studentdata.length - 1; i >= 0; i--) {

                        if (studentdata[i].StudentName == studentname) {

                            string1 = studentdata[i].ID + "-" + string1
                            iscun = true;
                        }
                    }
                    if (iscun) {
                        string1 = string1.substring(0, string1.length - 1);
                        loadtable00();
                    } else {
                        layer.msg('暂无该学生信息!', { icon: 6, time: 2000 }, function () {

                        });

                    }
                }
               
                return false;
            });

        });


    </script>
}