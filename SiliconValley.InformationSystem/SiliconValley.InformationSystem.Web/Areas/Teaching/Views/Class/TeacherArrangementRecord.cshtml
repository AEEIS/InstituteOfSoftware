
@{
    ViewBag.Title = "TeacherArrangementRecord";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using SiliconValley.InformationSystem.Entity.MyEntity
@section style{
    <link href="~/Scripts/dtree2.5.4/layui_ext/dtree/dtree.css" rel="stylesheet" />
    <link href="~/Scripts/dtree2.5.4/layui_ext/dtree/font/dtreefont.css" rel="stylesheet" />


    <style>
        #mywarp {
            position: relative;
            width: 100%;
        }

        #emplist {
            float: left;
            width: 20%;
            margin-top: 100px;
        }

        #recordlist {
            float: left;
            width: 80%;
        }

        .courseItem {
            margin-top: 5px;
            border-bottom: 1px solid gray;
        }

        .class_name {
            margin: 10px auto;
        }

        .courseItem div {
            display: inline-block;
            margin-left: 50px;
        }

            .courseItem div label {
                font-size: 18px;
            }

        .item {
            margin-top: 50px;
        }
        #flush {
            cursor: pointer;
        }
    </style>
}
<div id="mywarp">

    <div id="toor">
        <form class="layui-form">


            <div class="layui-form-item">
                <div class="layui-inline">

                    <span id="flush">刷新<i style="font-size:20px;" class="layui-icon layui-icon-refresh"></i></span>

                </div>

                <div class="layui-inline">
                    <label class="layui-form-label">班级</label>
                    <div class="layui-input-inline">
                        <select name="classnumber">
                            @{
                                foreach (var item in ViewBag.classlist as List<ClassSchedule>)
                                {
                                    <option selected value="@item.id">@item.ClassNumber</option>
                                }
                            }
                        </select>
                    </div>
                </div>
             

                <div class="layui-inline">
                    <button id="search" class="layui-btn layui-btn-primary" lay-submit lay-filter="search" type="button">搜索 </button>

                </div>
            </div>

        </form>
    </div>

    <div id="emplist">
        <ul id="demoTree" class="dtree" data-id="0"></ul>
    </div>
    <div id="recordlist">

    </div>

</div>

@section script{
    <script src="~/Areas/Teaching/Scripts/util.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script type="text/template" id="muban">

        <div class="item" classteacherid="{{=classteacherid}}" classid="{{=classid}}">
            <div class="class_name">
                <h3>{{=className}}</h3>
            </div>

            <div class="courseItem">
                <div><label>课程：</label><span></span>{{=CourseName}}</div>
                <div><label>上课老师：</label><span></span>{{=TeacherName}}</div>
                <div><label>开始时间：</label><span></span>{{=BeginDate}}</div>
                <div><label>状态：</label><span></span>{{=status}}</div>



                <div class="checkMore" style="margin-left:90%;"><span class="layui-badge layui-bg-blue">查看更多</span></div>
            </div>
        </div>

    </script>
    <script>

        var currentDate = new Date();  //当前日期

        layui.extend({
            dtree: '{/}/Scripts/dtree2.5.4/layui_ext/dist/dtree'   // {/}的意思即代表采用自有路径，即不跟随 base 路径
        }).use(['dtree', 'layer', 'jquery', 'form', 'table', 'laydate', 'flow'], function () {
            var dtree = layui.dtree;
            var layer = layui.layer;
            var flow = layui.flow;
            var jquery = layui.jquery; var form = layui.form; var table = layui.table; var laydate = layui.laydate;
            var myDTree = dtree.render({
                elem: "#demoTree",
                initLevel: 1,
                url: '/Teaching/Class/TeacherArrangementTeacherData',
                success: function (res, $obj, first) {
                    // res:当前异步加载的数据，
                    //$obj:当前组件的根节点的JQuery对象，
                    //first:是否首次加载。


                },
                formatter: {
                    title: function (data) {  // 示例给有子集的节点返回节点统计
                        var s = data.context;
                        if (data.children) {
                            s += ' <span style=\'color:blue\'>(' + data.children.length + ')</span>';
                        }
                        return s;
                    }
                },
                nodeIconArray: { "3": { "open": "dtree-icon-pulldown", "close": "dtree-icon-pullup" } },  // 自定扩展的二级非最后一级图标，从1开始
                leafIconArray: { "11": "dtree-icon-star" },  // 自定义扩展的二级最后一级图标，从11开始
                icon: ["3", "11"], // 使用
                response: { statusCode: 200, rootName: "data", treeId: "nodeId", title: "context" }
            });

      

            //绑定节点点击
            dtree.on("node('demoTree')", function (obj) {
                $("#recordlist").html("");
                if (obj.param.level != "2") {
                    return;
                }

                flow.load({
                    elem: '#recordlist' //指定列表容器
                    , isAuto: true
                    , done: function (page, next) {
                        var lis = [];

                        $.get('/Teaching/Class/TeacherArrangementData?page=' + page + "&empnumber=" + obj.param.nodeId, function (res) {

                            layui.each(res.data, function (index, item) {
                                console.log(item);
                                var status; var beginDate; var checked = "";

                                if (item.IsDel == false) {
                                    status = "正常";
                                    checked = "checked";
                                }
                                else {
                                    status = "过去式";
                                }

                                console.log(status);
                                var dateutc = item.BeginDate.substr(item.BeginDate.indexOf('(') + 1, 13);
                                beginDate = formaDateUtc(dateutc);


                                var template = _.template($("#muban").html());
                                var templateData = template({ classteacherid: item.ID, classid: item.ClassNumber.id, className: item.ClassNumber.ClassNumber, CourseName: item.Skill.CourseName, TeacherName: item.Teacher.EmpName, BeginDate: beginDate, status: status });
                                $("#recordlist").append(templateData);

                            });
                            form.render();

                            next(lis.join(''), page < res.total);
                        });
                    }
                });


            });
            $("#flush").click(function () {
                var index = layer.load(2, { time: 10 * 1000 }); //又换了种风格，并且设定最长等待10秒
                window.location.reload();

            });
      
            $(document).off("mouseover", '#flush').on('mouseover', '#flush', function () {

                $(this).attr("style", 'color:blue');
            });


            $(document).off("mouseout", '#flush').on('mouseout', '#flush', function () {

                $(this).attr("style", '');
            });

            form.on('submit(search)', function (data) {
                console.log(data.elem) //被执行事件的元素DOM对象，一般为button对象
                console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
                console.log(data.field) //当前容器的全部表单字段，名值对形式：{name: value}

                $("#recordlist").html("");
                flow.load({
                    elem: '#recordlist' //指定列表容器
                    , isAuto: true
                    , done: function (page, next) {
                        var lis = [];

                        $.get('/Teaching/Class/TeacherArrangementData?page=' + page + "&classnumber=" + data.field.classnumber, function (res) {

                            layui.each(res.data, function (index, item) {
                                console.log(item);
                                var status; var beginDate; var checked = "";

                                if (item.IsDel == false) {
                                    status = "正常";
                                    checked = "checked";
                                }
                                else {
                                    status = "过去式";
                                }

                                console.log(status);
                                var dateutc = item.BeginDate.substr(item.BeginDate.indexOf('(') + 1, 13);
                                beginDate = formaDateUtc(dateutc);


                                var template = _.template($("#muban").html());
                                var templateData = template({ classteacherid: item.ID, classid: item.ClassNumber.id, className: item.ClassNumber.ClassNumber, CourseName: item.Skill.CourseName, TeacherName: item.Teacher.EmpName, BeginDate: beginDate, status: status });
                                $("#recordlist").append(templateData);

                            });
                            form.render();

                            next(lis.join(''), page < res.total);
                        });
                    }
                });
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });

        });

    </script>
}

