
@{
    Layout = null;
}
@using SiliconValley.InformationSystem.Entity.MyEntity;
@model SiliconValley.InformationSystem.Entity.MyEntity.OvertimeRecord
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>OvertimeApply</title>
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <script src="~/Scripts/layui/layui.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    <style>
        #but1 {
            position: absolute;
            top: 13%;
            left: 35%;
            width: 36px;
            height: 36px;
            text-align: center;
            line-height: 36px;
        }

            #but1:hover {
                background-color: aqua;
            }

        #Nation {
            width: 100px;
        }

        .linu {
            height: 120px;
        }
    </style>
</head>
<body>
    <div>
        <form class="layui-form" action="" lay-filter="formtest">
            <div class="layui-container">
                <input type="hidden" name="EmployeeId" id="EmployeeId" value="@ViewBag.eid" />

                <div class="layui-form-item">
                    <label class="layui-form-label">申请人:</label>
                    <div class="layui-input-block">
                        <input type="text" name="EmpName" id="EmpName" readonly style="border:0px;" class="layui-input" />
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">开始时间:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.StartTime, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">结束时间:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.EndTime, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label" style="width:120px;margin-left:-40px;">加班时长(小时):</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.Duration, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">加班原因:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.OvertimeReason, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

             
                <div class="layui-form-item">
                    <label class="layui-form-label">加班类型:</label>
                    <div class="layui-input-block">
                      @Html.DropDownListFor(s=>s.OvertimeTypeId,ViewBag.overtimetype as SelectList, new Dictionary<string, object>() {{ "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">备注:</label>
                    <div class="layui-input-block">
                        @Html.TextAreaFor(a => a.Remark, new Dictionary<string, object>() { { "class", "layui-input linu" } })
                    </div>
                </div>
            </div>

            <div class="layui-form-item" style="margin-top:40px;">
                <div class="layui-input-block">
                    <button class="layui-btn layui-btn-warm" lay-submit="" type="button" lay-filter="demo1">立即提交</button>
                    <button class="layui-btn layui-btn-warm" id="btnclose1">关闭</button>
                </div>
            </div>
        </form>
    </div>


    <script>

       
        $(function () {
            loademp();// 初始化编辑数据加载
        });
        function loademp() {
            var id = $("#EmployeeId").val();
            console.log(id);
            $.get("/Personnelmatters/ApprovalManagement/GetEmpid/" + id, function (data) {
                layui.use(['layer', 'form', 'table'], function () {
                    var form = layui.form, laydate = layui.laydate;
                    $("#EmpName").val(data.EmpName);
                    form.val("formtest", data);
                  
                });
            })
        }


        layui.use(['form', 'layedit', 'laydate'], function () {
            var form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit;
            var laydate = layui.laydate;

            //计算两个时间的小时差
            function getInervalHour(startDate, endDate) {
                
                var date1 = new Date(startDate);
                var date2 = new Date(endDate);
                var day1 = date1.getDate();
                var day2 = date2.getDate();
               
                if (day2 - day1 == 0) {
                    var hours1 = date1.getHours();
                    var hours2 = date2.getHours();      
                    var minuts1 = date1.getMinutes();
                    var minuts2 = date2.getMinutes();
                    var result = hours2 - hours1;

                    if (minuts2 - minuts1 >= 30 && minuts2 - minuts1 < 60) {
                        result = result + 0.5;
                    } else if (minuts1 - minuts2 > 0 && minuts1 - minuts2 <=30) {
                        result = result - 0.5;
                    } else if (minuts1 - minuts2 >30 && minuts1 - minuts2 <60) {
                        result = result - 1;
                    }
                }
                return result;
            }
          
            //注：结束时间不能小于开始时间，开始时间不能大于结束时间，加班的时间只能每天申请
            var startTime = laydate.render({
                elem: '#StartTime',
                type: 'datetime', 
                format:'yyyy-MM-dd HH:mm:ss',
                done: function (value, date) {
                    //获取当前选择的日期的星期
                    var myweekday = "日一二三四五六".charAt(new Date(value).getDay());

                    endTime.config.min = {
                        year: date.year,
                        month: date.month - 1,//关键
                        date: date.date,
                        hours: date.hours,
                        minutes: date.minutes,
                        seconds: date.seconds
                    },
                        endTime.config.max = {
                            year: date.year,
                            month: date.month - 1,//关键
                            date: date.date,
                            hours: '23',
                            minutes: '59',
                            seconds: '59'
                        }
                    var myendtime = $("#EndTime").val();

                    //如果是6-9月（即招生旺季）,则只有周日休息，加班申请时间任意,其余工作日加班两个时间点（早上0点到8.30，晚上18点开始）
                    if (date.month >= 6 && date.month < 10) {
                        if (myweekday == "日") {
                            time = getInervalHour(value, myendtime);
                        } else {
                            if (myendtime != "") {
                                var time;
                                var stime = new Date(myendtime);
                                if ((stime.getHours() < 18 || (stime.getHours() == 18 && stime.getMinutes() == 0)) && (date.hours > 8 || (date.hours == 8 && date.minutes >= 30))) {
                                    time = 0;
                                } else if ((date.hours > 18 || (date.hours == 18 && date.minutes >= 0)) || (stime.getHours() < 8 || (stime.getHours() == 8 && stime.getMinutes() < 30))) {
                                    time = getInervalHour(value, myendtime);
                                } else if ((date.hours < 8 || (date.hours == 8 && date.minutes == 30)) && (stime.getHours() > 8 || stime.getHours() == 8 && stime.getMinutes() >= 30)) {
                                    if ((stime.getHours() < 18) || stime.getHours() == 18 && stime.getMinutes() == 0) {
                                        stime.setHours(8);
                                        stime.setMinutes(30);
                                        time = getInervalHour(start, stime);
                                    } else {
                                        var mydate = new Date(value);
                                        mydate.setHours(18);
                                        mydate.setMinutes(0);
                                        time = getInervalHour(mydate, stime);
                                        stime.setHours(8);
                                        stime.setMinutes(30);
                                        time = time + getInervalHour(value, stime);
                                    }
                                }

                                else {
                                    var start = new Date(value);
                                    start.setHours(18);
                                    start.setMinutes(0);
                                    time = getInervalHour(start, myendtime);
                                }

                            }
                        }
                    }
                    else {//如果是非招生旺季）,则有周六周日休息时间，加班申请时间任意，其余工作日加班两个时间点（早上0点到8.30，晚上18点开始）
                        if (myweekday == "六" || myweekday == "日") {
                         time = getInervalHour(value, myendtime);
                        } else {
                            if (myendtime != "") {
                                var time;
                                var stime = new Date(myendtime);
                                if ((stime.getHours() < 18 || (stime.getHours() == 18 && stime.getMinutes() == 0)) && (date.hours > 8 || (date.hours == 8 && date.minutes >= 30))) {
                                    time = 0;
                                } else if ((date.hours > 18 || (date.hours == 18 && date.minutes >= 0)) || (stime.getHours() < 8 || (stime.getHours() == 8 && stime.getMinutes() < 30))) {
                                    time = getInervalHour(value, myendtime);
                                } else if ((date.hours < 8 || (date.hours == 8 && date.minutes == 30)) && (stime.getHours() > 8 || stime.getHours() == 8 && stime.getMinutes() >= 30)) {
                                    if ((stime.getHours() < 18) || stime.getHours() == 18 && stime.getMinutes() == 0) {
                                        stime.setHours(8);
                                        stime.setMinutes(30);
                                        time = getInervalHour(value, stime);
                                    } else {
                                        var mydate = new Date(value);
                                        mydate.setHours(18);
                                        mydate.setMinutes(0);
                                        time = getInervalHour(mydate, stime);
                                        stime.setHours(8);
                                        stime.setMinutes(30);
                                        time = time + getInervalHour(value, stime);
                                    }
                                }

                                else {
                                    var start = new Date(value);
                                    start.setHours(18);
                                    start.setMinutes(0);
                                    time = getInervalHour(start, myendtime);
                                }

                            }
                        }
                    }

                    $("#Duration").val(time);
                }
            });//开始时间

            var endTime = laydate.render({
                elem: '#EndTime',
                type: 'datetime',
                format: 'yyyy-MM-dd HH:mm:ss',
                done: function (value, date) {
                    //获取当前选择的日期的星期
                    var myweekday = "日一二三四五六".charAt(new Date(value).getDay());
                   
                    startTime.config.max = {
                        year: date.year,
                        month: date.month - 1,//关键
                        date: date.date,
                        hours: date.hours,
                        minutes: date.minutes,
                        seconds: date.seconds
                    },
                        startTime.config.min = {
                            year: date.year,
                            month: date.month - 1,//关键
                            date: date.date,
                            hours: '0',
                            minutes: '0',
                            seconds: '0'
                        }
                    var mystarttime = $("#StartTime").val();
                    var time;

                    //如果是6-9月（即招生旺季）,则只有周日休息，加班申请时间任意,其余工作日加班两个时间点（早上0点到8.30，晚上18点开始）
                    if (date.month >= 6 && date.month < 10) {
                        if (myweekday == "日") {
                            time = getInervalHour(mystarttime, value);
                        } else {
                            if (mystarttime != "") {
                                var stime = new Date(mystarttime);
                                //开始时间和结束时间处于工作时间（8：30-18：00）
                                if ((date.hours < 18 || (date.hours == 18 && date.minutes == 0)) && (date.hour > 8 || (date.hours == 8 && date.minute >= 30))) {
                                    time = 0;
                                }  //正常可加班时间（开始时间大于18：00，结束时间小于8：30）
                                else if (date.hours < 8 || (date.hours == 8 && date.minutes < 30) || stime.getHours() > 18 || (stime.getHours() == 18 && stime.getMinutes >= 30)) {
                                    time = getInervalHour(mystarttime, value);
                                } //开始时间小于8：30，结束时间大于八点半
                                else if ((date.hours > 8 || (date.hours == 8 && date.minutes >= 30)) && (stime.getHours() < 8 || (stime.getHours() == 8 && stime.getMinutes <= 30))) {
                                    //结束时间大于18：00
                                    if ((date.hours > 18 || (date.hours == 18 && date.minutes >= 0))) {
                                        var mydate = new Date(value);
                                        mydate.setHours(8);
                                        mydate.setMinutes(30);
                                        time = getInervalHour(stime, mydate);
                                        console.log();
                                        stime.setHours(18);
                                        stime.setMinutes(0);
                                        time = time + getInervalHour(stime, value);
                                    } else {//结束时间处于8：30-18：00
                                        var mydate = new Date(value);
                                        mydate.setHours(8);
                                        mydate.setMinutes(30);
                                        console.log(mydate);
                                        time = getInervalHour(stime, mydate);
                                    }

                                }      //开始时间大于8：30 ，则开始时间默认设置为18：00计算                     
                                else {
                                    stime.setHours(18);
                                    stime.setMinutes(0);
                                    time = getInervalHour(stime, value);
                                }

                            }
                        }
                    }
                    else {//如果是非招生旺季）,则有周六周日休息时间，加班申请时间任意，其余工作日加班两个时间点（早上0点到8.30，晚上18点开始）
                        if (myweekday == "六" || myweekday == "日") {
                            time = getInervalHour(mystarttime, value);
                        } else {
                            if (mystarttime != "") {
                                var stime = new Date(mystarttime);
                                //开始时间和结束时间处于工作时间（8：30-18：00）
                                if ((date.hours < 18 || (date.hours == 18 && date.minutes == 0)) && (date.hour > 8 || (date.hours == 8 && date.minute >= 30))) {
                                    time = 0;
                                }  //正常可加班时间（开始时间大于18：00，结束时间小于8：30）
                                else if (date.hours < 8 || (date.hours == 8 && date.minutes < 30) || stime.getHours() > 18 || (stime.getHours() == 18 && stime.getMinutes >= 30)) {
                                    time = getInervalHour(mystarttime, value);
                                } //开始时间小于8：30，结束时间大于八点半
                                else if ((date.hours > 8 || (date.hours == 8 && date.minutes >= 30)) && (stime.getHours() < 8 || (stime.getHours() == 8 && stime.getMinutes <= 30))) {
                                    //结束时间大于18：00
                                    if ((date.hours > 18 || (date.hours == 18 && date.minutes >= 0))) {
                                        var mydate = new Date(value);
                                        mydate.setHours(8);
                                        mydate.setMinutes(30);
                                        time = getInervalHour(stime, mydate);
                                        console.log();
                                        stime.setHours(18);
                                        stime.setMinutes(0);
                                        time = time + getInervalHour(stime, value);
                                    } else {//结束时间处于8：30-18：00
                                        var mydate = new Date(value);
                                        mydate.setHours(8);
                                        mydate.setMinutes(30);
                                        console.log(mydate);
                                        time = getInervalHour(stime, mydate);
                                    }

                                }      //开始时间大于8：30 ，则开始时间默认设置为18：00计算                     
                                else {
                                    stime.setHours(18);
                                    stime.setMinutes(0);
                                    time = getInervalHour(stime, value);
                                }

                            }
                        }
                    }
                  

                    $("#Duration").val(time);
                }
            });//结束时间

            //添加提交
            form.on('submit(demo1)', function (data) {
                $.post("/Personnelmatters/ApprovalManagement/OvertimeApply", data.field, function (data) {
                    if (data.Success) {
                        layer.alert("申请成功!", { icon: 1 }, function () {
                            var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
                            parent.layer.close(index);

                        });
                    } else {
                        layer.alert("申请失败!");
                    }
                });
                return false;
            });

            //关闭添加页面
            $("#btnclose1").click(function () {
                var index = parent.layer.getFrameIndex(window.name);
                parent.layer.close(index);
            });
        });
        function changeDateTimeFormat(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minute + ":" + ss;
            } else {
                return "";
            }
        }

     
       
    </script>
</body>
</html>
