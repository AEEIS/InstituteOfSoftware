
@{
    Layout = null;
}
@using SiliconValley.InformationSystem.Entity.MyEntity;
@model SiliconValley.InformationSystem.Entity.MyEntity.DaysOff
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>DaysOffApply</title>
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <script src="~/Scripts/layui/layui.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    <style>
        #but1 {
            position: absolute;
            top: 13%;
            left: 35%;
            width: 36px;
            height: 36px;
            text-align: center;
            line-height: 36px;
        }

            #but1:hover {
                background-color: aqua;
            }

        #Nation {
            width: 100px;
        }

        .linu {
            height: 120px;
        }
    </style>
</head>
<body>
    <div>
        <form class="layui-form" action="" lay-filter="formtest" id="myform">
            <div class="layui-container">
                <input type="hidden" name="EmployeeId" id="EmployeeId" value="@ViewBag.eid" />

                <div class="layui-form-item">
                    <label class="layui-form-label">申请人:</label>
                    <div class="layui-input-block">
                        <input type="text" name="EmpName" id="EmpName" readonly style="border:0px;" class="layui-input" />
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">开始时间:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.StartTime, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">结束时间:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.EndTime, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label" style="width:120px;margin-left:-40px;">调休时长(小时):</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.Duration, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">调休理由:</label>
                    <div class="layui-input-block">
                        @Html.TextBoxFor(a => a.LeaveReason, new Dictionary<string, object>() { { "class", "layui-input " } })
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">图片:</label>
                    <div class="layui-input-block">
                        <input type="file" id="Image" name="Image" />
                        <div style="border:1px solid #808080;width:400px;height:200px;">
                            <img id="showimg" style="width:400px;height:200px;" />
                        </div>
                    </div>
                </div>

            </div>

            <div class="layui-form-item" style="margin-top:40px;">
                <div class="layui-input-block">
                    <button class="layui-btn " lay-submit="" type="button" lay-filter="demo1">立即提交</button>
                    <button class="layui-btn " id="btnclose1">关闭</button>
                </div>
            </div>
        </form>
    </div>


    <script>
        //异步读取图片并显示
        document.querySelector("#Image").onchange = function () {
            //1.0获取选择的文件
            var f = this.files[0];
            //创建文件读取器
            var file = new FileReader();
            //读取文件,参数代表要读取的文件
            file.readAsDataURL(f);

            //开始读取文件
            //file.start();
            //注意文件的读取时异步读取的
            //要在file.onload事件中才能获取到文件的内容
            file.onload = function (e) {
                document.querySelector("#showimg").src = e.target.result;
            };

            //最后通过file.result属性返回读取文件的内容
            document.querySelector("#showimg").src = file.result;
        }

        $(function () {
            loademp();// 初始化编辑数据加载
        });
        function loademp() {
            var id = $("#EmployeeId").val();
            console.log(id);
            $.get("/Personnelmatters/ApprovalManagement/GetEmpid/" + id, function (data) {
                layui.use(['layer', 'form', 'table'], function () {
                    var form = layui.form, laydate = layui.laydate;
                    $("#EmpName").val(data.EmpName);
                    form.val("formtest", data);

                });
            })
        }

        $("#Duration").change(function () {
            console.log("改变");
        });


        layui.use(['form', 'layedit', 'laydate', 'upload'], function () {
            var form = layui.form
                , layer = layui.layer
                , layedit = layui.layedit
                , laydate = layui.laydate
                , upload = layui.upload;

            //计算时间分钟差
            function GetInervalMin(minuts1, minuts2) {
                    var result =0;
                if (minuts2 - minuts1 >= 30 && minuts2 - minuts1 < 60) {
                    result = result + 0.5;
                } else if (minuts1 - minuts2 > 0 && minuts1 - minuts2 <= 30) {
                    result = result - 0.5;
                } else if (minuts1 - minuts2 > 30 && minuts1 - minuts2 < 60) {
                    result = result - 1;
                }
                return result;
            }

            //计算两个时间的小时差
            function getInervalHour(startDate, endDate) {

                var date1 = new Date(startDate);
                var date2 = new Date(endDate);
                var day1 = date1.getDate();
                var day2 = date2.getDate();

                var hours1 = date1.getHours();
                var hours2 = date2.getHours();
                var minuts1 = date1.getMinutes();
                var minuts2 = date2.getMinutes();
               
                var daylead = day2 - day1;
                var hourleadone = 0;
                var hourleadtwo = 0;
                var result;

                if (daylead == 0) {
                    //1.开始时间大于等于17.30，或结束时间小于等于8.30
                    if (hours1 > 17 || (hours1 == 17 && minuts1 >= 30) || hours2 < 8 || (hours2 == 8 && minuts2 <= 30)) {
                        hourleadone = 0;
                        console.log("开始时间大于等于17.30，或结束时间小于等于8.30");
                    }
                    //开始时间<=8.30,结束时间>8.30
                    else if ((hours1 < 8 || (hours1 == 8 && minuts1 <= 30)) && (hours2 > 8 || hours2 == 8 && minuts2 >= 30)) {
                                    hours1 = 8;
                                    minuts1 = 30;
                        if (hours2 < 12 || (hours2 == 12 && minuts2 == 0)) { //1.结束时间小于12点
                            hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                        } else if ((hours2 > 14 || (hours2 == 14 && minuts2 == 0)) && (hours2 < 17 || (hours2 == 17 && minuts2 <= 30))) {//2.结束时间>=14点<=17.30
                            hourleadone = (hours2 - hours1 - 2) + GetInervalMin(minuts1, minuts2);
                        } else if (hours2 > 17 || (hours2 == 17 && minuts2 >=30)) {
                            hourleadone =7;
                        } else {
                            hourleadone = 3.5;
                        }
                       
                    }
                    //开始时间>=8.30,结束时间>17.30
                    else if ((hours1 >8 || (hours1 == 8 && minuts1 >=30))) {
                         
                        if (hours1 < 12 || (hours1 == 12 && minuts1 == 0)) { //1.开始时间小于12点
                            if (hours2 > 17 || (hours2 == 17 && minuts2 >= 30)) {
                                hours2 = 17;
                                minuts2 = 30;
                                hourleadone = (hours2 - hours1 - 2) + GetInervalMin(minuts1, minuts2);
                            } else if (hours2 < 12 || (hours2 == 12 && minuts2 ==0)) {
                                hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                            } else if ((hours2 < 14 || (hours2 == 14 && minuts2 == 0)) && (hours2 > 12 || (hours2 == 12 && minuts2 == 0))) {
                                hours2 = 12;
                                minuts2 = 0;
                                hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                            } else  {
                                console.log("结束时间大于14点 小于17.30");
                                hourleadone = (hours2 - hours1 - 2) + GetInervalMin(minuts1, minuts2);
                            }
                           
                        }

                        else if (hours1 > 14 || (hours1 == 14 && minuts1 == 0)) {
                            if (hours2 > 17 || (hours2 == 17 && minuts2 >= 30)) {
                                hours2 = 17;
                                minuts2 = 30;
                                hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                            } else {
                                hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                            }
                        } else {
                            if (hours2 > 17 || (hours2 == 17 && minuts2 >= 30)) {
                                hourleadone = 3.5;
                            } else {
                                hours1 = 14;
                                minuts1 = 0;
                                hourleadone = (hours2 - hours1) + GetInervalMin(minuts1, minuts2);
                            }
                        }

                    }
                    //开始时间>=8.30,结束时间<=17.30
                   
                    //else {
                    //    hourleadone = 3.5;
                    //}
                    result = hourleadone ;
                } else {
                    //开始时间判断：
                    //1.大于等于14点，且小于17.30的情况下，
                    if ((hours1 > 14 || (hours1 == 14 && minuts1==0)) && (hours1 < 17 || (hours1 == 17 && minuts1 <= 30))) {
                        hourleadone = 17 - hours1;
                        hourleadone = hourleadone + GetInervalMin(minuts1, 30);
                        console.log("大于等于14，且小于17.30的情况下，");
                    }
                    //小于等于12.00，且大于等于8.30的情况下，
                    else if ((hours1 < 12 || (hours1 == 12 && minuts1 == 0)) && (hours1 > 8 || hours1 == 8 && minuts1 >= 30)) {
                        hourleadone = 17 - hours1 - 2;
                        hourleadone = hourleadone + GetInervalMin(minuts1, 30);
                        console.log("小于等于12.00，且大于等于8.30的情况下");
                    }
                    //大于等于17.30的情况下
                    else if (hours1 > 17 || (hours1 == 17 && minuts1 >= 30)) {
                        hourleadone = 0;
                        console.log("大于等于17.30的情况下");
                    }
                    //小于等于8.30的情况下
                    else if (hours1 < 8 || (hours1 == 8 && minuts1 <= 30)) {
                        hourleadone = 7;
                        console.log("小于等于8.30的情况下");
                    } else {
                        hourleadone = 3.5;
                    }

                    //结束时间判断：
                    //1.大于14点，且小于17.30的情况下，
                    if ((hours2 > 14 || (hours2 == 14 && minuts2 > 0)) && (hours2 < 17 || (hours2 == 17 && minuts2 <= 30))) {
                        hourleadtwo = hours2 - 8-2;
                        hourleadtwo = hourleadtwo + GetInervalMin(30, minuts2);
                    }
                    //小于等于12.00，且大于等于8.30的情况下，
                    else if ((hours2 < 12 || (hours2 == 12 && minuts2 == 0)) && (hours2 > 8 || hours2 == 8 && minuts2 >= 30)) {
                        hourleadtwo = hours2 - 8;
                        hourleadtwo = hourleadtwo + GetInervalMin(30, minuts2);
                    }
                    //大于等于17.30的情况下
                    else if (hours2 > 17 || (hours2 == 17 && minuts2 >= 30)) {
                        hourleadtwo = 7;
                    }
                    //小于等于8.30的情况下
                    else if (hours2 < 8 || (hours2 == 8 && minuts2 <= 30)) {
                        hourleadtwo = 0;
                    } else {
                        hourleadtwo = 3.5;
                    }
                    result = hourleadone + hourleadtwo + (daylead - 1) * 7;
                }
               
               
                console.log("开始时间差：" + hourleadone);
                console.log("结束时间差：" + hourleadtwo);
             
                    return result;
                }
 
                //注：结束时间不能小于开始时间，开始时间不能大于结束时间
                var startTime = laydate.render({
                    elem: '#StartTime',
                    type: 'datetime',
                    format: 'yyyy-MM-dd HH:mm:ss',
                    btns: ['now', 'confirm'],
                    done: function (value, date) {
                        endTime.config.min = {
                            year: date.year,
                            month: date.month - 1,//关键
                            date: date.date,
                            hours: date.hours,
                            minutes: date.minutes,
                            seconds: date.seconds
                        }
                        var myendtime = $("#EndTime").val();
                        if (myendtime != "") {
                            var time = getInervalHour(value, myendtime);
                            console.log(time);

                            $.post("/Personnelmatters/ApprovalManagement/DurationCheck", { time: time,empid: $("#EmployeeId").val() } , function (data) {
                                if (data.Msg == "No") {
                                    layer.alert("时间不足，该员工还剩" + data.Data + "小时可调休时间!", { icon: 1 }, function (index) {
                                        $("#Duration").val(0);
                                       layer.close(index);

                                    });
                                } else if (data.Msg == "Ok") {
                                    $("#Duration").val(time);
                                } else {
                                    layer.alert("调休时间查询出错！", { icon: 1 }, function (index) {
                                        $("#Duration").val(0);
                                       layer.close(index);

                                    });
                                }
                            });
                           
                        }
                       
                    }
                });//开始时间
                var endTime = laydate.render({
                    elem: '#EndTime',
                    type: 'datetime',
                    format: 'yyyy-MM-dd HH:mm:ss',
                    btns: ['now', 'confirm'],
                    done: function (value, date) {
                        startTime.config.max = {
                            year: date.year,
                            month: date.month - 1,//关键
                            date: date.date,
                            hours: date.hours,
                            minutes: date.minutes,
                            seconds: date.seconds
                        }
                        var mystartime = $("#StartTime").val();
                        if (mystartime != null) {
                           var time = getInervalHour(mystartime, value);
                            $.post("/Personnelmatters/ApprovalManagement/DurationCheck", { time: time, empid: $("#EmployeeId").val() }, function (data) {
                                if (data.Msg == "No") {
                                    layer.alert("时间不足，该员工还剩" + data.Data + "小时可调休时间!", { icon: 1 }, function (index) {
                                        $("#Duration").val(0);
                                        layer.close(index);

                                    });
                                } else if (data.Msg == "Ok") {
                                    $("#Duration").val(time);
                                } else {
                                    layer.alert("调休时间查询出错！", { icon: 1 }, function (index) {
                                        $("#Duration").val(0);
                                       layer.close(index);

                                    });
                                }
                            });

                        }
                     
                    }
                });//结束时间

                //添加提交
                form.on('submit(demo1)', function (data) {
                    var fd = new FormData();
                    var myimg = document.querySelector("#Image").files[0];
                    fd.append('Image', myimg);
                    for (var item in data.field) {
                        fd.append(item, data.field[item]);
                    }
                    console.log(fd);

                    $.ajax({
                        type: "post",
                        url: "/Personnelmatters/ApprovalManagement/DaysOffApply",
                        data: fd,
                        dataType: "json",

                        //报错请加入以下三行，则ajax提交无问题
                        cache: false,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            if (data.Success) {
                                layer.alert("申请成功!", { icon: 1 }, function () {
                                    var index = parent.layer.getFrameIndex(window.name); //先得到当前iframe层的索引
                                    parent.layer.close(index);

                                });
                            } else {
                                layer.alert("申请失败!");
                            }
                        }
                    });

                });

                //关闭添加页面
                $("#btnclose1").click(function () {
                    var index = parent.layer.getFrameIndex(window.name);
                    parent.layer.close(index);
                });
        });

       
    </script>
</body>
</html>
