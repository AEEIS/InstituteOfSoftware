
@{
    ViewBag.Title = "EmpSalaryEmbodyIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<table id="salarysystemtab" lay-filter="salarysystemtab"></table>
@*操作栏*@
<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
  
</script>

@section script{
    <script>

        layui.use(['table', 'layer', 'form', 'laydate', 'element'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            var element = layui.element;

            table.render({
                elem: '#salarysystemtab'
                , url: '/Personnelmatters/EmplSalaryEmbody/GetSalarySystemData'
                , id: "mySalarySystem"
                , toolbar: '#toolbarDemo'
                , limits: [5, 10, 15, 20, 25, 30]
                , limit: 10
                , cols: [[
                      { field: 'empName', title: '姓名', width: 100, sort: true }
                    , { field: 'Depart', title: '所属部门', width: 120, sort: true }
                    , { field: 'Position', title: '所属岗位', width: 110, sort: true }
                    , { field: 'BaseSalary', title: '基本工资', sort: true, width: 110 }
                    , { field: 'PositionSalary', title: '岗位工资', sort: true, width: 110 }
                    , { field: 'PerformancePay', title: '绩效额度', sort: true, width: 120 }
                    , { field: 'NetbookSubsidy', title: '笔记本补助', width: 110 }
                    , { field: 'ContributionBase', title: '社保缴费基数', width: 120 }
                    , { field: 'PersonalSocialSecurity', title: '个人社保', width: 110 }
                    , { field: 'SocialSecuritySubsidy', title: '社保补贴', width: 110 }
                    , { field: 'PersonalIncomeTax', title: '个税', width: 95 }
                    , { field: 'Remark', title: '备注', sort: true, width: 110 }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo' }
                ]]
                , page: true
            });

     
            //监听行工具事件
            table.on('tool(salarysystemtab)', function (obj) {
                var data = obj.data;
                console.log(data.Id);
                if (obj.event === 'edit') {
                    layer.open({
                        type: 2,
                        content: '/Personnelmatters/EmplSalaryEmbody/EditESE?id=' + data.Id
                        , area: ["900px", "600px"]
                        , title: '编辑员工工资体系'
                        , shade: 0.8
                        , anim: 4
                        , skin: 'demo-class'
                    });
                } 
             
            });


        });


        //格式化时间
        function GetYearAndMonth(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month;
            } else {
                return "";
            }
        }
        //显示年月日
        function GetYMD(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate;
            } else {
                return "";
            }
        }
        function changeDateTimeFormat(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minute + ":" + ss;
            } else {
                return "";
            }
        }
    </script>



}
