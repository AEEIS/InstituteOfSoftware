
@{
    ViewBag.Title = "SalaryManageIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*头部工具栏*@
<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="timeUpdate">年月份改变</button>
    </div>
</script>

<table id="salarytab" lay-filter="salarytab"></table>


@section script{
    <script>

        layui.use(['table', 'layer', 'form', 'laydate', 'element'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            var element = layui.element;
           // console.log(@ViewBag.yearandmonth);
            table.render({
                elem: '#salarytab'
                , url: '/Personnelmatters/EmpSalaryManagement/EmpSalaryData'
                , id: "mySalaryStatistics"
                , toolbar: '#toolbarDemo'
                , limits: [5, 10, 15, 20, 25, 30]
                , limit: 10
                , cols: [[{ title: '湖南硅谷云教育科技有限公司--' + "@ViewBag.yearandmonth"+ "--工资表", colspan: 22 }],
                    [{ type: 'checkbox', width: 28, rowspan:2}
                        , { field: 'empName', title: '姓名', width: 100, sort: true, rowspan:2 }
                        , { field: 'Depart', title: '所属部门', width: 130, sort: true, rowspan:2 }
                        , { field: 'Position', title: '所属岗位', width: 110, sort: true, rowspan:2 }
                        , { field: 'toRegularDays', title: '出勤天数', width: 110, sort: true, rowspan:2 }
                        , { field: 'baseSalary', title: '基本工资', sort: true, width: 110, rowspan:2 }
                        , { field: 'positionSalary', title: '岗位工资', sort: true, width: 110, rowspan:2 }
                        , { field: 'finalGrade', title: '绩效分', sort: true, width: 100, rowspan:2 }
                        , { field: 'PerformanceSalary', title: '绩效工资', sort: true, width: 110, rowspan:2 }
                        , { field: 'netbookSubsidy', title: '笔记本补助', sort: true, width: 125, rowspan:2 }
                        , { field: 'socialSecuritySubsidy', title: '社保补贴', sort: true, width: 110, rowspan:2 }
                        , { field: 'SalaryOne', title: '应发工资1', sort: true, width: 120, rowspan:2 }
                        , { field: 'OvertimeCharges', title: '加班费用', sort: true, width: 110, rowspan:2 }
                        , { field: 'Bonus', title: '奖金/元', sort: true, width: 110, rowspan:2 }
                      
                        , { align: 'center', title: '考勤扣款', colspan:4 }                      
                      
                        , { field: 'OtherDeductions', title: '其他扣款', sort: true, width: 110, rowspan:2}
                        , { field: 'SalaryTwo', title: '应发工资2', sort: true, width: 120, rowspan:2}
                        , { field: 'PersonalSocialSecurity', title: '个人社保', sort: true, width: 110, rowspan:2 }
                        , { field: 'PersonalIncomeTax', title: '个税', sort: true, width: 100, rowspan:2 }
                        , { field: 'Total', title: '合计', sort: true, width: 100, rowspan:2 }
                        , { field: 'PayCardSalary', title: '实发工资(工资卡)', sort: true, width: 160, rowspan:2  }
                        , { field: 'CashSalary', title: '实发工资(现金)', sort: true, width: 150, rowspan:2 }
                    ], [
                          { field: 'leavedays', title: '请假天数', width: 110 }
                        , { field: 'LeaveDeductions', title: '请假扣款/元', width: 120 }
                        , { field: 'TardyWithhold', title: '迟到扣款/元', width: 120 }
                        , { field: 'LeaveWithhold', title: '早退扣款/元', width: 120 }
                    ]]
                , page: true
            });

            //头工具栏事件
            table.on('toolbar(salarytab)', function (obj) {
                //var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'timeUpdate':
                        TimeUpdate();
                        break;

                };
            });

          
        });
        //年月份改变
        function TimeUpdate() {
            layui.use(['layer'], function (args) {
                var layer = layui.layer;      //layui对象

                layer.open({
                    type: 2
                    , area: ["400px", "300px"]
                    , title: ""
                    , content: '/Personnelmatters/EmpSalaryManagement/UpdateTime'
                    , anim: 2
                });

            })

        }


        //格式化时间
        function GetYearAndMonth(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month;
            } else {
                return "";
            }
        }
        //显示年月日
        function GetYMD(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate;
            } else {
                return "";
            }
        }
        function changeDateTimeFormat(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minute + ":" + ss;
            } else {
                return "";
            }
        }
    </script>



}
