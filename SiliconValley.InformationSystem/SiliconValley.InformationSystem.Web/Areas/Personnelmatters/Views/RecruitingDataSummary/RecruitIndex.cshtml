
@{
    ViewBag.Title = "RecruitIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="layui-tab layui-tab-card">
    <ul class="layui-tab-title">
        <li class="layui-this">人才需求计划</li>
        <li>招聘追踪记录</li>
        <li>月度招聘数据汇总</li>

    </ul>
    <div class="layui-tab-content">
        <div class="layui-tab-item layui-show">
            <table id="tdpTab" lay-filter="test1"></table>
            @*头部工具栏*@
            <script type="text/html" id="toolbarDemo1">
                <div class="layui-btn-container">
                    <button class="layui-btn layui-btn-sm" lay-event="addDemand">添加人才需求</button>
                    <button class="layui-btn layui-btn-sm" lay-event="getFromExcel">Excel文件导入</button>
                </div>
            </script>
        </div>

        <div class="layui-tab-item">
            <table id="rptTab" lay-filter="test2"></table>
            @*头部工具栏*@
            <script type="text/html" id="toolbarDemo2">
                <div class="layui-btn-container">
                    <button class="layui-btn layui-btn-sm" lay-event="addRPT">添加招聘追踪数据</button>
                </div>
            </script>
        </div>
        <div class="layui-tab-item">
            <table id="recruitTab" lay-filter="test3"></table>
            @*头部工具栏*@
            <script type="text/html" id="toolbarDemo3">
                <div class="layui-btn-container">
                    <button class="layui-btn layui-btn-sm" lay-event="addDept">添加月度招聘汇总信息</button>
                </div>
            </script>
        </div>

    </div>
</div>

@section script{

    @*人才需求计划的IsDel*@
    <script type="text/html" id="switchTpl">
        <input type="checkbox" name="IsDel" value="{{d.Id}}" lay-skin="switch" lay-text="是|否" lay-filter="stateDemo" {{ d.IsDel == 'True' ? 'checked' : '' }}>
    </script>
    @*招聘电话追踪记录的是否入职属性*@
    <script type="text/html" id="switchTp2">
        <input type="checkbox" name="IsEntry" value="{{d.Id}}" lay-skin="switch" lay-text="是|否" lay-filter="entryDemo" {{ d.IsEntry == 'True' ? 'checked' : '' }}>
    </script>
    @*招聘电话追踪记录的是否面试属性*@
    <script type="text/html" id="switchTp3">
        <input type="checkbox" name="IsInterview" value="{{d.Id}}" lay-skin="switch" lay-text="是|否" lay-filter="IsInterviewDemo" {{ d.IsInterview == 'True' ? 'checked' : '' }}>
    </script>

    <script>
        //人才需求计划
        layui.use(['table', 'layer', 'form', 'laydate', 'element'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            var element = layui.element;

            table.render({
                elem: '#tdpTab'
                , url: '/Personnelmatters/RecruitingDataSummary/GetTalantDemandData'
                , id: "mytdpData"
                , toolbar: '#toolbarDemo1'
                , limits: [1, 3, 6, 9, 12, 15, 18]
                , limit: 6
                , cols: [[
                    , { field: 'dname', title: '部门', width: 73 }
                    , { field: 'pname', title: '岗位名称', width: 126, sort: true }
                    , { field: 'DemandPersonNum', title: '需求人数', width: 105, sort: true }
                    , { field: 'empname', title: '负责人', width: 95, sort: true }
                    , { field: 'ApplyTime', title: '需求申请时间', width: 135, sort: true, templet: function (d) { return GetYMD(d.ApplyTime); } }
                    , { field: 'PlanEntryTime', title: '预入职时间', width: 130, sort: true, templet: function (d) { return GetYMD(d.PlanEntryTime); } }
                    , { field: 'PositionStatement', title: '岗位职责', width: 140, sort: true }
                    , { field: 'PositionRequest', title: '岗位要求', width: 140, sort: true }
                    , { field: 'RecruitReason', title: '招聘原因', sort: true, width: 140 }
                    , { field: 'Remark', title: '备注' }
                    , { field: 'IsDel', title: '是否完成招聘', sort: true, templet: '#switchTpl', unresize: true }
                ]]
                , page: true
            });

            //头工具栏事件
            table.on('toolbar(test1)', function (obj) {
                //var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'addDemand':
                        AddDemand();
                        break;
                    case 'getFromExcel':
                        GetFromExcel();
                        break;
                };
            });

            //监听是否完成招聘操作
            form.on('switch(stateDemo)', function (obj) {
                var id = this.value;
                $.ajax({
                    type: "get",
                    dataType: "json",
                    url: "/Personnelmatters/RecruitingDataSummary/EditTdpIsdel",
                    data: { id: id, isdel: obj.elem.checked },
                    success: function (data) {
                        layer.tips(this.value + ' ' + this.name + '：' + obj.elem.checked, obj.othis);
                    }
                });
            });

        });

        //招聘电话追踪数据
        layui.use(['table', 'layer', 'form', 'laydate', 'element'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            var element = layui.element;

            table.render({
                elem: '#rptTab'
                , url: '/Personnelmatters/RecruitingDataSummary/GetTraceData'
                , id: "myrptData"
                , toolbar: '#toolbarDemo2'
                , limits: [1, 3, 6, 9, 12, 15, 18]
                , limit: 6
                , cols: [[
                    , { field: 'Name', title: '姓名', sort: true, width: 60 }
                    , { field: 'pname', title: '应聘岗位', sort: true, width: 105 }
                    , { field: 'PhoneNumber', title: '手机号', width: 96, sort: true }
                    , { field: 'TraceTime', title: '追踪时间', width: 108, sort: true, templet: function (d) { return GetYMD(d.TraceTime); } }
                    , { field: 'Channel', title: '渠道', width: 95, sort: true }
                    , { field: 'ResumeType', title: '简历类型', sort: true, width: 110 }
                    , { field: 'PhoneCommunicateResult', title: '电话沟通结果', width: 120 }
                    , { field: 'FirstInterviewDate', title: '初试日期', width: 100, templet: function (d) { return GetYMD(d.FirstInterviewDate); } }
                    , { field: 'IsInterview', title: '是否面试', width: 100, templet: '#switchTp3', unresize: true }
                    , { field: 'FirstInterviewResult', title: '初试结果', width: 100 }
                    , { field: 'RetestDate', title: '复试日期', width: 100, templet: function (d) { return GetYMD(d.RetestDate); } }
                    , { field: 'RetestResult', title: '复试结果', width: 100 }
                    , { field: 'OfferGiveTime', title: 'offer时间', width: 100, templet: function (d) { return changeDateTimeFormat(d.OfferGiveTime); } }
                    , { field: 'PlanEntryTime', title: '预计入职时间', width: 100, templet: function (d) { return GetYMD(d.PlanEntryTime); } }
                    , { field: 'IsEntry', title: '是否入职', width: 100, templet: '#switchTp2', unresize: true }
                    , { field: 'Remark', title: '备注', sort: true, width: 90 }

                ]]
                , page: true
            });

            //头工具栏事件
            table.on('toolbar(test2)', function (obj) {
                //var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'addRPT':
                        AddRPT();
                        break;
                };
            });
            
            //监听是否入职操作
            form.on('switch(entryDemo)', function (obj) {
                var id = this.value;
                $.ajax({
                    type: "get",
                    dataType: "json",
                    url: "/Personnelmatters/RecruitingDataSummary/EditRptIsentry",
                    data: { id: id, isdel: obj.elem.checked },
                    success: function (data) {
                        layer.tips(this.value + ' ' + this.name + '：' + obj.elem.checked, obj.othis);
                    }
                });
            });

            //监听是否面试操作
            form.on('switch(IsInterviewDemo)', function (obj) {
                var id = this.value;
                $.ajax({
                    type: "get",
                    dataType: "json",
                    url: "/Personnelmatters/RecruitingDataSummary/EditRptIsInterview",
                    data: { id: id, isdel: obj.elem.checked },
                    success: function (data) {
                        layer.tips(this.value + ' ' + this.name + '：' + obj.elem.checked, obj.othis);
                    }
                });
            });

        });

        //月度招聘数据汇总
        layui.use(['table', 'layer', 'form', 'laydate', 'element'], function () {
            var table = layui.table;
            var layer = layui.layer;
            var form = layui.form;
            var laydate = layui.laydate;
            var element = layui.element;

            table.render({
                elem: '#recruitTab'
                , url: '/Personnelmatters/RecruitingDataSummary/GetRecruitData'
                , id: "myRecruitData"
                , toolbar: '#toolbarDemo3'
                , limits: [1, 3, 6, 9, 12, 15, 18]
                , limit: 6
                , cols: [[
                    , { field: 'YearAndMonth', title: '月份', sort: true, width: 120, templet: function (d) { return GetYearAndMonth(d.YearAndMonth); } }
                    , { field: 'Pid', title: '岗位', width: 90 }
                    , { field: 'PlanRecruitNum', title: '计划招聘人数', width: 108, sort: true }
                    , { field: 'ResumeSum', title: '简历总数', width: 110, sort: true }
                    , { field: 'OutboundCallSum', title: '电话呼出总数', width: 110, sort: true }
                    , { field: 'InstantInviteSum', title: '当月邀约总数', width: 110, sort: true }
                    , { field: 'InstantToFacesSum', title: '当月到面总数', sort: true, width: 110 }
                    , { field: 'InstantRetestSum', title: '当月复试总数', width: 100 }
                    , { field: 'InstantRetestPassSum', title: '当月复试通过总数', sort: true, width: 90 }
                    , { field: 'InstantEntryNum', title: '当月入职人数', sort: true, width: 90 }
                    , { field: 'InstantToFacesRate', title: '当月到面率', sort: true, width: 100 }
                    , { field: 'InstantInviteRate', title: '当月邀约率', sort: true, width: 120 }
                    , { field: 'InstantRetestPassrate', title: '当月复试通过率', sort: true, width: 120 }
                    , { field: 'EntryRate', title: '入职率', sort: true, width: 120 }
                    , { field: 'RecruitPercentage', title: '招聘完成率', sort: true, width: 120 }
                    , { field: 'Remark', title: '备注', sort: true, width: 120 }

                ]]
                , page: true
            });

          
        });

        //添加人才需求方法
        function AddDemand() {
            layui.use(['layer'], function (args) {
                var layer = layui.layer;      //layui对象
                layer.open({
                    type: 2
                    , area: ["1000px", "600px"]
                    , title: "人才需求的添加"
                    , content: '/Personnelmatters/RecruitingDataSummary/AddTalantDemand'
                    , anim: 2
                });

            })
        }

        //将人才需求从excel中倒过来
        function GetFromExcel() {

        }

        //添加招聘电话追踪记录
        function AddRPT() {
            layui.use(['layer'], function (args) {
                var layer = layui.layer;      //layui对象
                layer.open({
                    type: 2
                    , area: ["1000px", "600px"]
                    , title: "添加招聘电话追踪信息"
                    , content: '/Personnelmatters/RecruitingDataSummary/Addrpt'
                    , anim: 2
                });

            })
        }


        //格式化时间
        //只显示年月
        function GetYearAndMonth(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month;
            } else {
                return "";
            }
        }
        //显示年月日
        function GetYMD(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate;
            } else {
                return "";
            }
        }
        //年月日时分秒都显示
        function changeDateTimeFormat(cellval) {
            if (cellval != null) {
                var date;
                if (cellval.indexOf("/Date(") >= 0) {
                    date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
                }
                else {
                    date = new Date(cellval);
                }

                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
                var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
                var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

                return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minute + ":" + ss;
            } else {
                return "";
            }
        }
    </script>

}

