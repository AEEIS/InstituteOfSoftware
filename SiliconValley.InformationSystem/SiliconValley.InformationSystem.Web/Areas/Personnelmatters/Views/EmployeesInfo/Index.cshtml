@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*模糊查询*@
<form class="layui-form" action="" lay-filter="formtest">
    <div class="layui-row layui-form-item">
        <div class="layui-col-xs4 layui-col-sm4 layui-col-md4">
            <label class="layui-form-label">姓名：</label>
            <div class="layui-input-inline">
                <input type="text" id="EmpName" name="EmpName" autocomplete="off" class="layui-input">
            </div>
        </div>
        <div class="layui-col-xs4 layui-col-sm4 layui-col-md4">
            <label class="layui-form-label" style="width:100px;">所属部门</label>
            <div class="layui-input-inline">
                <select name="deptid" id="deptid" style="width:100px;" lay-filter="deptidfilter" lay-search="">
                    <option value="">请选择所属部门</option>
                </select>

            </div>
        </div>
        <div class="layui-col-xs4 layui-col-sm4 layui-col-md4">
            <label class="layui-form-label" style="width:100px;">所属岗位</label>
            <div class="layui-input-block">
                <select name="PositionId" id="PositionId" lay-search="">
                    <option value="">--请选择--</option>
                </select>
            </div>
        </div>
    </div>

    <div class="layui-row layui-form-item">
        <div class="layui-col-xs4 layui-col-sm4 layui-col-md4">
            <label class="layui-form-label" style="width:100px;">在职状态：</label>
            <div class="layui-input-inline">
                <select id="IsDel" name="IsDel" lay-search="">
                    <option value="">--请选择--</option>
                    <option value="False">在职</option>
                    <option value="True">离职</option>
                </select>
            </div>
        </div>
        <div class="layui-inline">
            <label class="layui-form-label" style="width:100px;">入职时间：</label>
            <div class="layui-inline" style="margin-left:-50px;">
                <label class="layui-form-label">从：</label>
                <div class="layui-input-inline">
                    <input type="text" id="start_time" name="start_time"  placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                </div>
            </div>

            <div class="layui-inline" style="margin-left:-50px;">
                <label class="layui-form-label">至：</label>
                <div class="layui-input-inline">
                    <input type="text" id="end_time" name="start_time"  placeholder="yyyy-MM-dd" autocomplete="off" class="layui-input">
                </div>
            </div>
        </div>
        <button class="layui-btn" type="button" id="Conditionselect" style="margin-left:40px;">查询</button>

    </div>



</form>

@*头部工具栏*@
<script type="text/html" id="toolbarDemo">
    <div class="layui-btn-container">
        <button class="layui-btn layui-btn-sm" lay-event="AddEmps">添加员工</button>
        <button class="layui-btn layui-btn-sm" lay-event="DeptAndPositionOperation">部门及岗位管理</button>
    </div>
</script>

<table id="emptab" lay-filter="emptest"></table>


@section script{

<script>
    layui.use(['table', 'layer', 'form', 'laydate'], function () {
        var table = layui.table;
        var layer = layui.layer;
        var form = layui.form;
        var laydate = layui.laydate;
      
        table.render({
            elem: '#emptab'
            , url: '/Personnelmatters/EmployeesInfo/GetData'
            , id: "myEmpInfo"
            , toolbar: '#toolbarDemo'
            , limits: [5,10,15,20,25,30]
            , limit: 10
            , cols: [[
                , { field: 'EmployeeId', title: '员工编号', width: 126 }
                , { field: 'DDAppId', title: '钉钉工号', width: 108, sort: true }
                , { field: 'EmpName', title: '姓名', width: 110, sort: true, edit: 'text' }
                , { field: 'Depart', title: '所属部门', width: 110, sort: true }
                , { field: 'Position', title: '所属岗位', width: 110, sort: true }
                , { field: 'Phone', title: '电话号码', sort: true, width: 110, edit: 'text' }
                , { field: 'IsDel', title: '在职状态', width: 100, templet: '#myworkstate' }
                , { field: 'Sex', title: '性别', sort: true, width: 90, templet: '#switchTp2', unresize: true }
                , { field: 'Age', title: '年龄', sort: true, width: 90 }
                , { field: 'Nation', title: '民族', sort: true, width: 100, edit: 'text' }
                , { field: 'IdCardNum', title: '身份证号码', sort: true, width: 120, edit: 'text' }
                , { field: 'EntryTime', title: '入职时间', sort: true, width: 110, templet: function (d) { return GetYMD(d.EntryTime) } }
                , { field: 'ContractStartTime', title: '合同起始时间', sort: true, width: 135, event: 'date', data_field: "ContractStartTime", templet: function (d) { return GetYMD(d.ContractStartTime) } }
                , { field: 'ContractEndTime', title: '合同终止时间', sort: true, width: 135, event: 'date', data_field: "ContractEndTime", templet: function (d) { return GetYMD(d.ContractEndTime) } }
                , { field: 'Birthdate', title: '出生日期', sort: true, width: 110, templet: function (d) { return GetYMD(d.Birthdate) } }
                , { field: 'Birthday', title: '生日', sort: true, width: 110, edit: 'text' }
                , { field: 'PositiveDate', title: '转正日期', sort: true, width: 110, templet: function (d) { return GetYMD(d.PositiveDate) } }
                , { field: 'UrgentPhone', title: '紧急联系电话', sort: true, width: 135, edit: 'text' }
                , { field: 'DomicileAddress', title: '户籍地址', sort: true, width: 110, edit: 'text' }
                , { field: 'Address', title: '现居地址', sort: true, width: 110, edit: 'text' }
                , { field: 'Education', title: '学历', sort: true, width: 110, edit: 'text'}
                , { field: 'MaritalStatus', title: '婚姻状态', sort: true, width: 110, templet: '#switchTpl', unresize: true }
                , { field: 'IdCardIndate', title: '身份证有效期', sort: true, width: 135, event: 'date', data_field: "IdCardIndate", templet: function (d) { return GetYMD(d.IdCardIndate) } }
                , { field: 'PoliticsStatus', title: '政治面貌', sort: true, width: 110, edit: 'text' }
                , { field: 'WorkExperience', title: '工作经验', sort: true, width: 110, edit: 'text' }
                , { field: 'ProbationSalary', title: '试用期工资', sort: true, width: 120 }
                , { field: 'Salary', title: '转正工资', sort: true, width: 110 }
                , { field: 'SSStartMonth', title: '社保起始月份', sort: true, width: 135, event: 'date', data_field: "SSStartMonth", templet: function (d) { return GetYMD(d.SSStartMonth) } }
                , { field: 'BCNum', title: '银行卡号', sort: true, width: 110, edit: 'text' }
                , { field: 'Material', title: '材料', sort: true, width: 110, edit: 'text' }
                , { field: 'Remark', title: '备注', sort: true, width: 110, edit: 'text' }
            ]],
            data: [{
                IdCardIndate: '',
                SSStartMonth: '',
                ContractStartTime: '',
                ContractEndTime: ''
            }]
            , page: true
        });

        //头工具栏事件
        table.on('toolbar(emptest)', function (obj) {
            //var checkStatus = table.checkStatus(obj.config.id);
            switch (obj.event) {
                case 'AddEmps':
                    AddEmployee();
                    break;
                case 'DeptAndPositionOperation':
                    DeptAndPositionOperation();
                    break;
            };
        });

        //监听单元格编辑
        table.on('edit(emptest)', function (obj) {
            var value = obj.value //得到修改后的值
                , data = obj.data //得到所在行所有键值
                , field = obj.field; //得到字段
            $.ajax({
                type: "get",
                dataType: "json",
                url: "/Personnelmatters/EmployeesInfo/EditTableCell",
                data: { id: data.EmployeeId, Attrbute: field, endvalue: value },
                success: function (data) {
                    console.log("单元格结果：" + data);
                    if (data.Success) {
                        layui.table.reload('myEmpInfo');
                    } else {
                        layer.msg("修改失败!");
                    }
                }
            });

        });

        //监听单元格日期编辑事件
        table.on('tool(emptest)', function (obj) {
            var data = obj.data;
            if (obj.event === 'date') {
                var field = $(this).data('field');
                console.log("入职时间：" + GetYMD(data.EntryTime));
                laydate.render({
                    elem: this.firstChild,
                    show: true //直接显示
                    //, closeStop: this
                    , btns: ['now', 'confirm']
                    , format:'yyyy-MM-dd'
                    , min: CheckDatamin(data, field)
                    , max: CheckDatamax(data, field)
                    , done: function (value, date) {
                        $.ajax({
                            type: "get",
                            dataType: "json",
                            url: "/Personnelmatters/EmployeesInfo/EditDateCell",
                            data: { id: data.EmployeeId, Attrbute: field, endvalue: value },
                            success: function (data) {
                                console.log(data.Msg );
                                if (data.Success) {
                                    layui.table.reload('myEmpInfo');
                                }
                                else {
                                    layer.msg("修改失败!");
                                }
                            }
                        });
                    }
                });
             
            }
        });
        //单元格合同起止时间编辑的最大值最小值确认
        function CheckDatamin(first, second) {
            if (second == "ContractStartTime") {
                return GetYMD(first.EntryTime);
            } else if (second == "ContractEndTime") {
                console.log(GetYMD(first.ContractStartTime));
                if (GetYMD(first.ContractStartTime) == "") {
                    return GetYMD(first.EntryTime);
                } else {
                    return GetYMD(first.ContractStartTime);
                }
               

            } else {
                return '1900-1-1';
            }
        }
        function CheckDatamax(first, second) {
            if (second == "ContractStartTime") {
                if (GetYMD(first.ContractEndTime) == "") {
                    return '2099-12-31';
                } else {
                    return GetYMD(first.ContractEndTime);
                }
            } else {
                return '2099-12-31';
            }
        }
     

        //监听婚姻状态操作
        form.on('switch(hunyinDemo)', function (obj) {

            var id = this.value; var name = this.name;
            console.log(id); console.log(name); console.log(obj.elem.checked);
            $.ajax({
                type: "get",
                dataType: "json",
                url: "/Personnelmatters/EmployeesInfo/EditEmphunyin",
                data: { id: id, name: name, ismarry: obj.elem.checked },
                success: function (data) {
                    if (data.Success) {
                        //layer.tips(this.value + ' ' + this.name + '：' + obj.elem.checked, obj.othis);
                        layui.table.reload('myEmpInfo');
                    } else {
                        layer.tips("修改失败!", obj.othis);
                    }
                }
            });
        });

        //模糊查询点击事件
        $("#Conditionselect").click(function () {
            var ename = $("#EmpName").val();//员工姓名
            var deptname = $("#deptid").val();//员工所属部门
            var pname = $("#PositionId").val();//员工所属岗位
            var IsDel = $("#IsDel").val();//员工在职状态
            var start_time = $("#start_time").val();//起始时间
            var end_time = $("#end_time").val();//终止时间

            layui.use(['table'], function () {
                var table = layui.table;
                table.reload('myEmpInfo', {
                    page: {
                        curr: 1 //重新从第 1 页开始
                    }, where: {
                        AppCondition: ename + "," + deptname + "," + pname + "," + IsDel + "," + start_time + "," + end_time
                    }
                });
            });



        });


        //日期
        var startTime = laydate.render({
            elem: '#start_time',
            done: function (value, date) {
                console.log(value);
                console.log(date);
                endTime.config.min = {
                    year: date.year,
                    month: date.month - 1,//关键
                    date: date.date,
                    hours: date.hours,
                    minutes: date.minutes,
                    seconds: date.seconds
                }
            }
        });
        var endTime = laydate.render({
            elem: '#end_time',
            done: function (value, date) {
                startTime.config.max = {
                    year: date.year,
                    month: date.month - 1,//关键
                    date: date.date,
                    hours: date.hours,
                    minutes: date.minutes,
                    seconds: date.seconds
                }
            }
        });

    });

   

    //添加员工的方法
    function AddEmployee() {
        layui.use(['layer'], function (args) {
            var layer = layui.layer;      //layui对象

            layer.open({
                type: 2
                , area: ["1200px", "800px"]
                , title: "添加员工"
                , content: '/Personnelmatters/EmployeesInfo/AddEmp'
                , anim: 2
            });

        })

    }

    //部门和岗位的管理
    function DeptAndPositionOperation() {
        layui.use(['layer'], function (args) {
            var layer = layui.layer;      //layui对象

            layer.open({
                type: 2
                , area: ["1100px", "750px"]
                , title: "部门及岗位管理"
                , content: '/Personnelmatters/EmployeesInfo/DeptOperation'
                , anim: 2
            });

        })

    }


    //格式化时间
    function GetYearAndMonth(cellval) {
        if (cellval != null) {
            var date;
            if (cellval.indexOf("/Date(") >= 0) {
                date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
            }
            else {
                date = new Date(cellval);
            }

            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
            var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
            var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

            return date.getFullYear() + "-" + month;
        } else {
            return "";
        }
    }
    //显示年月日
    function GetYMD(cellval) {
        if (cellval != null) {
            var date;
            if (cellval.indexOf("/Date(") >= 0) {
                date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
            }
            else {
                date = new Date(cellval);
            }

            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
            var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
            var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

            return date.getFullYear() + "-" + month + "-" + currentDate;
        } else {
            return "";
        }
    }
    function changeDateTimeFormat(cellval) {
        if (cellval != null) {
            var date;
            if (cellval.indexOf("/Date(") >= 0) {
                date = new Date(parseInt(cellval.replace("/Date(", "").replace(")/", ""), 10));
            }
            else {
                date = new Date(cellval);
            }

            var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
            var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
            var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
            var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
            var ss = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();

            return date.getFullYear() + "-" + month + "-" + currentDate + " " + hour + ":" + minute + ":" + ss;
        } else {
            return "";
        }
    }
</script>

    @*部门与岗位的下拉框动态赋值及下拉框二级联动*@
<script>
    layui.use(['form', 'upload', 'layer'], function () {

        var form = layui.form;
        $.ajax({
            url: '/Personnelmatters/EmployeesInfo/BindDeptSelect',
            data: {},
            dataType: "json",
            success: function (resultData) {
                $("#deptid").empty();
                if (resultData.code == 0) {

                    $("#deptid").append(new Option("请选择部门", ""));
                    $.each(resultData.data, function (index, item) {
                        $('#deptid')
                            .append(new Option(item.DeptName, item.DeptId));
                    });
                } else {
                    $("#deptid").append(new Option("暂无数据", ""));
                }

                layui.form.render("select");
            }
        });

        //级联子项目
        //select 监听
        form.on('select(deptidfilter)', function (data) {
            var value = data.value;  //select选中的值
            console.log("选中值" + value);
            $.ajax({
                url: "/Personnelmatters/EmployeesInfo/BindPositionSelect",
                data: { deptid: value },
                dataType: "json",
                success: function (resultData) {
                    if (resultData.code == 0) {
                        //清空赋值
                        $("#PositionId").empty();
                        console.log(resultData.data);
                        $("#PositionId").append(new Option("请选择岗位", ""));
                        $.each(resultData.data, function (index, item) {
                            //赋值
                            $('#PositionId')
                                .append(new Option(item.PositionName, item.Pid));
                        });
                    } else {
                        $("#PositionId").append(new Option("暂无数据", ""));
                    }
                    layui.form.render("select");
                }
            });
        })
        layui.form.render("select");

    });
</script>


@*员工婚姻状态及性别改变*@
<script type="text/html" id="switchTpl">
    <input type="checkbox" name="MaritalStatus" value="{{d.EmployeeId}}" lay-skin="switch" lay-text="未婚|已婚" lay-filter="hunyinDemo" {{d.MaritalStatus == false ? 'checked' : ''}}>

</script>
<script type="text/html" id="switchTp2">
    <input type="checkbox" name="Sex" value="{{d.EmployeeId}}" lay-skin="switch" lay-text="男|女" lay-filter="hunyinDemo" {{d.Sex == "男" ? 'checked' : ''}}>
</script>
@*工作状态*@
<script type="text/html" id="myworkstate">
    {{# if(d.IsDel==false){ }}
    {{ d.IsDel="在职" }}
    {{# }else{ }}
    {{ d.IsDel="离职" }}
    {{# } }}
</script>


}
