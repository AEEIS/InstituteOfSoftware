
@{
    ViewBag.Title = "StaffAdjustmentIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>StaffAdjustmentIndex</h2>*@

@{
    ViewBag.Title = "StudentBedtimeIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #procontent {
        width: 100%;
        height: 800px;
        /*border: 1px solid pink;*/
    }

    #protree {
        width: 12%;
        height: 100%;
        /*border: 1px solid pink;*/
        float: left;
    }

    #prouninhabited {
        width: 31%;
        height: 100%;
        /*border: 1px solid pink;*/
        float: left;
        margin-left: 10px;
    }

    #protable {
        width: 23%;
        height: 100%;
        float: right;
        /*border: 1px solid pink;*/
    }

    #div2 {
        width: 32%;
        height: 100%;
        float: left;
        /*border: 1px solid pink;*/
        margin-left: 10px;
    }
</style>

<link href="~/Scripts/dtree2.5.4/layui_ext/dtree/dtree.css" rel="stylesheet" />
<link href="~/Scripts/dtree2.5.4/layui_ext/dtree/font/dtreefont.css" rel="stylesheet" />
<div id="procontent">
    <div id="protree">
        <ul id="demoTree" style="width:210px" class="dtree" data-id="0"></ul>
    </div>
    <div id="prouninhabited">
        <div id="topdiv">
            <div id="mystudentwhytop">
                <form class="layui-form" action="">
                    <div class="layui-form-item">
                        <div class="layui-inline" id="mubandiv">
                            <label class="layui-form-label" id="querylable">搜索选择框</label>
                            <div class="layui-input-inline" style="width:156px">
                                <select name="modules" id="modules" lay-verify="required" lay-filter="select00" lay-search="">
                                    <option value="staffname">员工姓名</option>
                                    <option value="dormname">寝室号</option>
                                </select>
                            </div>
                            <div class="layui-input-inline" style="width:156px">
                                <input type="text" name="name0" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input">
                            </div>

                            <button class="layui-btn layui-btn-radius layui-btn-normal layui-btn" lay-submit="" lay-filter="btn0">搜索</button>

                        </div>

                    </div>
                </form>
            </div>
        </div>
        <div id="tablediv">
            <div id="table00div">
                <table class="layui-hide" id="table00" lay-filter="table00"></table>
            </div>
            <div id="table01div" style="display:none;">
                <table class="layui-hide" id="table01" lay-filter="table01"></table>
            </div>
        </div>
    </div>
    <div id="div2">
        <div id="topdiv1">
            <form class="layui-form" action="">
                <div class="layui-form-item">
                    <div class="layui-inline" id="mubandiv">
                        <label class="layui-form-label" id="querylable">搜索选择框</label>
                        <div class="layui-input-inline" style="width:156px">
                            <select name="modules" id="modules" lay-verify="required" lay-filter="select11" lay-search="">
                                <option value="all">全部</option>
                                <option value="staffname">员工姓名</option>
                                <option value="dormname">寝室号</option>
                            </select>
                        </div>
                        <div class="layui-input-inline" style="width:156px">
                            <input type="text" name="name1" @*lay-verify="required"*@ placeholder="请输入" autocomplete="off" class="layui-input">
                        </div>

                        <button class="layui-btn layui-btn-radius layui-btn-normal layui-btn" lay-submit="" lay-filter="btn1">搜索</button>

                    </div>

                </div>
            </form>
        </div>
        <div id="tablediv1">
            <table class="layui-hide" id="table11" lay-filter="table11"></table>
        </div>
    </div>
    <div id="protable" style="display:none;">
        <form class="layui-form" action="">
            <fieldset>
                <legend style="font-size:18px">
                    选择下列寝室
                </legend>
                <div class="layui-row layui-form-item">

                    <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                        <div id="radiodiv">
                        </div>

                    </div>
                </div>
            </fieldset>


            <fieldset>
                <legend style="font-size:18px">
                    选择下列床位
                </legend>
                <div class="layui-row layui-form-item">

                    <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                        <div id="bedradiodiv">
                        </div>

                    </div>
                </div>

            </fieldset>
            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn" lay-submit id="postbtn" lay-filter="postbtn">确定</button>
                </div>
            </div>
        </form>
    </div>
</div>
@section script{
    @*房间单选选中按钮模板*@
    <script type="text/template" id="radionuban">
        <input type="radio" name="DormInformation" lay-filter="dormfilter" value="{{=DormInfoID}}" title="{{=DormInfoName}}" checked>
    </script>
    @*房间单选未选中按钮模板*@
    <script type="text/template" id="radionuban1">
        <input type="radio" name="DormInformation" lay-filter="dormfilter" value="{{=DormInfoID}}" title="{{=DormInfoName}}">
    </script>
    @*床位单选选中按钮模板*@
    <script type="text/template" id="bedradionuban">
        <input type="radio" name="BedId" lay-filter="bedfilter" value="{{=BedID}}" title="{{=BenNo}}" checked>
    </script>
    @*床位单选未选中按钮模板*@
    <script type="text/template" id="bedradionuban1">
        <input type="radio" name="BedId" lay-filter="bedfilter" value="{{=BedID}}" title="{{=BenNo}}">
    </script>
    @*右侧按钮*@
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Areas/Dormitory/Script/operationdormxml.js"></script>
    <script>
        layui.extend({
            dtree: '{/}/Scripts/dtree2.5.4/layui_ext/dist/dtree'   // {/}的意思即代表采用自有路径，即不跟随 base 路径
        }).use(['dtree', 'layer', 'jquery', 'form', 'table'], function () {
            var dtree = layui.dtree, layer = layui.layer, $ = layui.jquery, form = layui.form, table = layui.table;

            var jstungid, jsfloorid, jsselect0, name0 = "", arry = new Array(), all, jsstudentdata,jsobj;
            //初始化树
            var myDTree = dtree.render({
                elem: "#demoTree",
                initLevel: 1,
                url: '/Dormitory/DormitoryInfo/EstablishTree',
                formatter: {
                    title: function (data) {  // 示例给有子集的节点返回节点统计
                        var s = data.context;
                        if (data.children) {
                            s += ' <span style=\'color:blue\'>(' + data.children.length + ')</span>';
                        }
                        return s;
                    }
                },
                nodeIconArray: { "3": { "open": "dtree-icon-pulldown", "close": "dtree-icon-pullup" } },  // 自定扩展的二级非最后一级图标，从1开始
                leafIconArray: { "11": "dtree-icon-star" },  // 自定义扩展的二级最后一级图标，从11开始
                icon: ["3", "11"], // 使用
                response: { statusCode: 200, rootName: "data", treeId: "nodeId", title: "context" }
            });

            var table00 = table.render({
                elem: '#table00'
                , url: '/Dormitory/StaffAdjustment/table00'
                , skin: 'line' //行边框风格
                , even: true //开启隔行背景
                , limit: 20
                , limits: [10, 20, 30, 45, 60, 75]
                , page: true
                , cols: [[ //标题栏
                    { type: 'checkbox' }
                    , { field: 'EmployeeId', title: '员工编号'/*, width: 180*/, hide: true }
                    , { field: 'EmpName', title: '员工姓名'}
                    , {
                        field: 'Sex', title: '性别', width: 60, templet: function (d) {

                            if (d.Sex == "男") {
                                return "<span style=color:blue;>男</span>"
                            } else {
                                return "<span style=color:red;>女</span>"
                            }
                        }
                    }
                    , { field: 'Phone', title: '联系电话', width: 117 }
                    , { field: 'DeptName', title: '部门'/*, width: 145,*/ }
                    , { field: 'DormName', title: '寝室'/*, width: 145,*/ }
                ]]
            });
            var table01 = table.render({
                elem: '#table01'
                , skin: 'line' //行边框风格
                , even: true //开启隔行背景
                , limit: 20
                , limits: [10, 20, 30, 45, 60, 75]
                , page: true
                , cols: [[ //标题栏
                    { type: 'checkbox' }
                    , { field: 'ID', title: 'id', width: 165, hide: true }
                    , { field: 'DormInfoName', title: '寝室号' }
                    , {
                        field: 'SexType', title: '寝室类型'/*, width: 165*/, templet: function (d) {

                            if (d.SexType == male.val) {
                                return "<span style=color:blue;>男寝</span>"
                            } else {
                                return "<span style=color:red;>女寝</span>"
                            }
                        }
                    }

                ]]
            });

            var table11 = table.render({
                elem: '#table11'
                , skin: 'line' //行边框风格
                , even: true //开启隔行背景
                , data: []
                , limit: 20
                , limits: [10, 20, 30, 45, 60, 75]
                , page: true
                , cols: [[ //标题栏
                    , { field: 'EmployeeId', title: '员工编号'/*, width: 180*/, hide: true }
                    , { field: 'EmpName', title: '员工姓名'/*, width: 95*/ }
                    , {
                        field: 'Sex', title: '性别'/*, width: 65*/, templet: function (d) {

                            if (d.Sex == "男") {
                                return "<span style=color:blue;>男</span>"
                            } else {
                                return "<span style=color:red;>女</span>"
                            }
                        }
                    }
                    , { field: 'DeptName', title: '部门'/*, width: 145,*/ }
                    
                    , { field: 'DormName', title: '寝室'/*, width: 145,*/ }
                    , { field: 'DormID', title: '寝室'/*, width: 145,*/, hide: true }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo'/*, width: 80*/ }
                ]]
            });

            $(function () {
                loadtree();
                male = $getsex("Male");

            });

            function loaddata() {
                $.ajax({
                    url: '/Dormitory/StaffAdjustment/loadall',
                    data: {},
                    type: 'GET',
                    success: function (successdata) {
                        all = successdata;
                        console.log(all);
                    }
                });
            }
            //加载树
            function loadtree() {
                $.ajax({
                    url: '/Dormitory/DormitoryInfo/EstablishTree',
                    type: 'GET',
                    success: function (successdata) {
                        //console.log(successdata);
                        jstungid = successdata.data[0].nodeId;
                        jsfloorid = successdata.data[0].children[0].nodeId;
                        loaddata();
                        //可以重载所有基础参数
                        myDTree.reload(
                            'demoTree',
                            {
                                data: successdata

                            });
                    },
                    error: function (errordata) {
                        layer.msg("网络延迟！", { icon: 6, time: 2000 }, function () {

                        });
                    }
                });
            }
            // 绑定节点点击
            dtree.on("node('demoTree')", function (obj) {
                //console.log(obj);
                var dtreeobj = obj.param;
                //console.log(dtreeobj);

                //点击的是楼
                if (dtreeobj.level == "2") {
                    jstungid = dtreeobj.parentId;
                    jsfloorid = dtreeobj.nodeId;

                }
                //点击的是栋
                if (dtreeobj.level == "1") {

                    var arry = obj.childParams;
                    if (arry.length > 0) {
                        jstungid = dtreeobj.nodeId;
                        for (var i = arry.length - 1; i >= 0; i--) {
                            if (arry[i].parentId != dtreeobj.nodeId) {
                                arry.splice(i, 1);
                            }
                        }
                        arry.sort(sortBy('nodeId'));
                        jsfloorid = arry[0].nodeId;

                    } else {
                        $("#protable").css('display', 'none');
                        layer.msg("暂无楼层，无法进行操作！", { icon: 6, time: 2000 }, function () {

                        });
                    }
                }

                getdormdata(jsstudentdata);
            });
            function sortBy(props) {
                return function (a, b) {
                    return a[props] - b[props];
                }
            }

            form.on('select(select00)', function (data) {
                $("input[name='name0']").val("");
                name0 = "";
                console.log(data.value); //得到被选中的值
                jsselect0 = data.value;
                switch (jsselect0) {
                    case 'staffname':
                        $("#table00div").show();
                        $("#table01div").hide();
                        loadtable00();
                        break;
                    case 'dormname':
                        $("#table00div").hide();
                        $("#table01div").show();
                        loadtable01();
                        break;

                }
            });

            form.on('select(select11)', function (data) {
                console.log(data.elem); //得到select原始DOM对象
                console.log(data.value); //得到被选中的值
                console.log(data.othis); //得到美化后的DOM对象
                if (data.value == "all") {
                    loadtable11();
                }
            });

            table.on('checkbox(table00)', function (obj) {
                console.log(table.checkStatus('table00'));
                var arry0 = table.checkStatus('table00');

                var arry1 = new Array();
                for (var i = 0; i < arry0.data.length; i++) {
                    for (var j = 0; j < all.length; j++) {
                        if (arry0.data[i].EmployeeId == all[j].EmployeeId) {
                            arry1.push(all[j]);
                        }
                    }
                }

                arry = arry1;

                console.log(arry);
                loadtable11();
            });
            table.on('checkbox(table01)', function (obj) {
                console.log(table.checkStatus('table01'));
                var arry0 = table.checkStatus('table01');
                var arry1 = new Array();
                for (var i = 0; i < arry0.data.length; i++) {
                    for (var j = 0; j < all.length; j++) {
                        if (arry0.data[i].ID == all[j].DormID) {
                            arry1.push(all[j]);
                        }
                    }
                }

                arry = arry1;
                console.log(arry);
                loadtable11();

            });

            function loadtable00() {
                table00.reload({
                    url: '/Dormitory/StaffAdjustment/table00'
                    , where: {
                        string1: name0
                    }
                    , page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }
            function loadtable01() {
                table01.reload({
                    url: '/Dormitory/StaffAdjustment/table01'
                    , where: {
                        dormname: name0
                    }
                    , page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }
            function loadtable11() {
                table11.reload({
                    data: arry
                    , page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }
            function newloadtable11(parem) {
                table11.reload({
                    data: parem
                    , page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }

            form.on('submit(btn0)', function (data) {
                //console.log(data.field);
                name0 = data.field.name0;
                switch (data.field.modules) {
                    case 'staffname':
                        loadtable00();
                        break;
                    case 'dormname':
                        loadtable01();
                        break;
                }
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });
            form.on('submit(btn1)', function (data) {
                //console.log(data.field);
                var name1 = data.field.name1;
                console.log(name1);
                switch (data.field.modules) {
                    case 'all':
                        loadtable11();
                        break;
                    case 'staffname':
                        var bb = new Array();
                        for (var i = 0; i < arry.length; i++) {
                            if (arry[i].EmpName == name1) {
                                bb.push(arry[i]);
                            }
                        }
                        newloadtable11(bb);
                        break;
                    case 'dormname':
                        var bb = new Array();
                        for (var i = 0; i < arry.length; i++) {
                            if (arry[i].DormName == name1) {
                                bb.push(arry[i]);
                            }
                        }
                        newloadtable11(bb);
                        break;
                }
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });

            table.on('tool(table11)', function (obj) {
                console.log(obj);
                //注：tool 是工具条事件名，test 是 table 原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的 DOM 对象（如果有的话）

                if (layEvent === 'del') { //删除
                    layer.confirm('真的删除行么', function (index) {
                        obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                        layer.close(index);
                        //向服务端发送删除指令
                    });
                }

            });
            //监听行单击事件
            table.on('row(table11)', function (obj) {
                console.log(obj);
                var mytr = obj.tr[0];
                $("tr").css("background", "");
                $(mytr).css("background", "pink");
                jsstudentdata = obj.data;
                getdormdata(jsstudentdata);
            });

            //发请求获取全部的宿舍
            function getdormdata(jsdata) {
                var jsprosex = jsdata.Sex;
                if (jsprosex == "男") {
                    jsprosex = true;
                } else {
                    jsprosex = false;
                }
                $.ajax({
                    url: '/Dormitory/StaffAdjustment/ChoiceInfo',
                    type: 'GET',
                    data: { sex: jsprosex, TungID: jstungid, FloorID: jsfloorid },
                    success: function (successdata) {
                        //console.log(successdata);
                        if (successdata.Success) {
                            //console.log(successdata);
                            var data = successdata.Data;
                            if (data.length > 0) {
                                $("#protable").show();
                                binddormradio(data);
                            } else {
                                $("#protable").hide();
                                layer.msg('暂无可用房间，请联系后勤主任添加房间。', { icon: 6, time: 2000 }, function () {
                                });
                            }

                        } else {
                            layer.msg("请与管理员联系");
                        }
                    },
                    error: function (errordata) {
                        layer.msg('网络异常！', { icon: 6, time: 2000 }, function () {
                        });
                    }
                });
            }

            //生成房间单选按钮
            function binddormradio(data) {
                //console.log("生成房间单选按钮");
                //console.log(data);
                $("#radiodiv").children().remove();
                for (var i = 0; i < data.length; i++) {
                    var radioobj = _.template($("#radionuban").html());
                    var radioobj1 = _.template($("#radionuban1").html());
                    var radiohtml;
                    if (i == 0) {
                        radiohtml = radioobj({ DormInfoID: data[i].ID, DormInfoName: data[i].DormInfoName });

                        getBeddata(data[i].ID, data[i]);
                    } else {
                        radiohtml = radioobj1({ DormInfoID: data[i].ID, DormInfoName: data[i].DormInfoName });
                    }
                    //console.log(radiohtml);
                    $("#radiodiv").append($(radiohtml));
                }
                form.render();
            }

            //发送请求获取居住的床位
            function getBeddata(data, dorminfo) {
            
                $.ajax({
                    url: '/Dormitory/StaffAdjustment/BedInfo',
                    type: 'GET',
                    data: { DorminfoID: data },
                    success: function (SuccessData) {
                        if (SuccessData.Success) {
                            bindbedradio(SuccessData.Data, dorminfo);
                        } else {
                            layer.msg("error");
                        }
                    },
                    error: function (ErrorData) {
                        layer.msg("error");
                    }
                });
            }

            //生成床位单选按钮
            function bindbedradio(data, dorminfo) {
                //console.log(data);
                $("#bedradiodiv").children().remove();
                for (var i = 0; i < data.length; i++) {
                    var radioobj = _.template($("#bedradionuban").html());
                    var radioobj1 = _.template($("#bedradionuban1").html());
                    var radiohtml;
                    if (i == 0) {
                        radiohtml = radioobj({ BedID: data[i].Id, BenNo: data[i].BenNo });
                      
                    } else {
                        radiohtml = radioobj1({ BedID: data[i].Id, BenNo: data[i].BenNo });
                    }
                    $("#bedradiodiv").append($(radiohtml));
                }
                form.render();
            }

           
            //房间单选按钮点击事件
            form.on('radio(dormfilter)', function (data) {
                dormid = data.value;
                console.log(data);
                //console.log(data.value); //被点击的radio的value值
                $.ajax({
                    url: '/Dormitory/DormitoryInfo/Checkdorm',
                    type: 'GET',
                    data: { DorminfoID: data.value },
                    success: function (Successdata) {
                        //console.log(Successdata);
                        if (Successdata.Success) {

                            //layer.msg('只想弱弱提示');
                            getBeddata(data.value, Successdata.Data);

                        } else {
                            layer.msg("error");
                        }
                    },
                    error: function () {
                        layer.msg("error");
                    }
                });
            });

            form.on('submit(postbtn)', function (data) {
                //console.log(data.elem) //被执行事件的元素DOM对象，一般为button对象
                //console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
                //console.log(data.field) //当前容器的全部表单字段，名值对形式：{name: value}
                //console.log(jsstudentdata);
                $.ajax({
                    url: '/Dormitory/StaffAdjustment/ArrangeDorm',
                    type: 'POST',
                    data: { BedId: data.field.BedId, DormId: data.field.DormInformation, resultdata: jsstudentdata.EmployeeId },
                    success: function (SuccessData) {
                        console.log(SuccessData);
                        if (SuccessData.Success) {
                            layer.msg('安排到位。');
                            console.log(arry);
                            for (var i = arry.length - 1; i >= 0; i--) {
                                if (arry[i].EmployeeId == jsstudentdata.EmployeeId) {
                                    arry.splice(i,1);
                                }
                            }
                            console.log(arry);
                            loadtable11();
                            
                            $("#protable").hide();

                        } else {
                            form.msg("error");
                        }
                    },
                    error: function () {
                        layer.msg("error");
                    }
                });
                loadtable00();
                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });
        });


    </script>
}



