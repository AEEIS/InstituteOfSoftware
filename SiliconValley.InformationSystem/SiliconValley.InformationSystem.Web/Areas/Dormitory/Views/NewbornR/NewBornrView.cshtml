@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>NewBornrView</title>

    <style>
        #procontent {
            width: 100%;
            height: 800px;
            /*border: 1px solid pink;*/
        }

        #protree {
            width: 18%;
            height: 100%;
            /*border: 1px solid pink;*/
            float: left;
        }

        #prouninhabited {
            width: 20%;
            height: 100%;
            /*border: 1px solid pink;*/
            float: left;
            margin-left: 50px;
        }

        #protable {
            width: 40%;
            height: 100%;
            float: left;
            margin-left: 50px;
        }

        h2, h4 {
            text-align: left;
        }
    </style>
    <link href="~/Scripts/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Scripts/dtree2.5.4/layui_ext/dtree/dtree.css" rel="stylesheet" />
    <link href="~/Scripts/dtree2.5.4/layui_ext/dtree/font/dtreefont.css" rel="stylesheet" />

</head>
<body>
    <input type="hidden" value="@ViewBag.student.StudentNumber" id="studentnumber" />
    <div>
        <div id="procontent">


            <div id="protree">
                <ul id="demoTree" class="dtree" data-id="0"></ul>
            </div>
            <div id="prouninhabited">

                @*<table class="layui-hide" id="UninhabitedStudent" lay-filter="UninhabitedStudent"></table>*@<br />
                <fieldset>
                    <legend>学生信息</legend>
                    <h2>@ViewBag.student.Name</h2>
                    <br />
                 
                    <h2 class="">
                        @{

                            string sex = ViewBag.student.Sex == true ? "男" : "女";
                        }
                        @sex
                        <label id="sex" style="display:none;">@ViewBag.student.Sex</label>
                    </h2>
                </fieldset>
                <fieldset>
                    <legend>宿舍信息</legend>

                    <h4><label style="font-size:16px; color:black;">宿舍：</label><span id="Tung" style="font-size:14px; color:gray;">----</span></h4>
                    <h4><label style="font-size:16px; color:black;">楼层：</label><span id="floor" style="font-size:14px; color:gray;">----</span></h4>
                    <h4><label style="font-size:16px; color:black;">房间：</label><span id="room" style="font-size:14px; color:gray;">----</span></h4>
                    <h4><label style="font-size:16px; color:black;">床号：</label><span id="bed" style="font-size:14px; color:gray;">----</span></h4>

                </fieldset>

            </div>
            <div id="protable" style="display:none">
                <form class="layui-form" action="">
                    <fieldset>
                        <legend style="font-size:18px">
                            选择下列寝室
                        </legend>
                        <div class="layui-row layui-form-item">

                            <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                                <div id="radiodiv">
                                </div>

                            </div>
                        </div>
                    </fieldset>

                    <fieldset>
                        <legend style="font-size:18px">
                            寝室信息
                        </legend>
                        <div class="layui-row layui-form-item">

                            <div class="layui-col-xs11 layui-col-sm11 layui-col-md11">
                                <label class="layui-form-label">寝室号</label>
                                <div class="layui-input-inline">
                                    <input type="text" id="DorminfoName" style="border:none;background-color:transparent;" readonly="readonly" value="" name="DorminfoName" autocomplete="off" class="layui-input">
                                    <input type="text" hidden="hidden" name="FloorId" id="FloorId" value="" />
                                    <input type="text" hidden="hidden" name="TungId" id="TungId" value="" />
                                </div>
                            </div>
                        </div>
                        <div class="layui-row layui-form-item">

                            <div class="layui-col-xs11 layui-col-sm11 layui-col-md11">
                                <label class="layui-form-label">寝室长</label>
                                <div class="layui-input-inline">
                                    <input type="text" id="leadername" style="border:none;background-color:transparent;" readonly="readonly" value="" name="leadername" lay-verify="title" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <fieldset>
                        <legend style="font-size:18px">
                            选择下列床位
                        </legend>
                        <div class="layui-row layui-form-item">

                            <div class="layui-col-xs12 layui-col-sm12 layui-col-md12">
                                <div id="bedradiodiv">
                                </div>

                            </div>
                        </div>

                    </fieldset>
                    <br />
                    <div class="layui-form-item">
                        <div class="layui-input-block">
                            <button class="layui-btn" lay-submit id="postbtn" lay-filter="postbtn">确定</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @*房间单选选中按钮模板*@
    <script type="text/template" id="radionuban">
        <input type="radio" name="DormInformation" lay-filter="dormfilter" value="{{=DormInfoID}}" title="{{=DormInfoName}}" checked>
    </script>
    @*房间单选未选中按钮模板*@
    <script type="text/template" id="radionuban1">
        <input type="radio" name="DormInformation" lay-filter="dormfilter" value="{{=DormInfoID}}" title="{{=DormInfoName}}">
    </script>
    @*床位单选选中按钮模板*@
    <script type="text/template" id="bedradionuban">
        <input type="radio" name="BedId" lay-filter="bedfilter" value="{{=BedID}}" title="{{=BenNo}}" checked>
    </script>
    @*床位单选未选中按钮模板*@
    <script type="text/template" id="bedradionuban1">
        <input type="radio" name="BedId" lay-filter="bedfilter" value="{{=BedID}}" title="{{=BenNo}}">
    </script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/underscore.js"></script>
    <script src="~/Areas/Dormitory/Script/operationdormxml.js"></script>
    <script src="~/Scripts/layui/layui.js"></script>
    <script>

        //验证字符串是否属于数值类型
        function checkNumber(theObj) {
            var reg = /^[0-9]+.?[0-9]*$/;
            if (reg.test(theObj)) {
                return true;
            }
            return false;
        }


        layui.extend({
            dtree: '{/}/Scripts/dtree2.5.4/layui_ext/dist/dtree'   // {/}的意思即代表采用自有路径，即不跟随 base 路径
        }).use(['dtree', 'layer', 'jquery', 'form', 'table'], function () {
            var dtree = layui.dtree, layer = layui.layer, $ = layui.jquery, form = layui.form, table = layui.table;

            var jstungid, jsfloorid, jsstudentdata, jsdatatype;


            var jsstudentdata = {
                StudentNumber: $("#studentnumber").val(),
                Sex: $("#sex").text() == "True" ? "男" : "女",
            };
            //初始化树
            var myDTree = dtree.render({
                elem: "#demoTree",
                initLevel: 1,
                url: '/Dormitory/DormitoryInfo/EstablishTree',
                formatter: {
                    title: function (data) {  // 示例给有子集的节点返回节点统计
                        var s = data.context;
                        if (data.children) {
                            s += ' <span style=\'color:blue\'>(' + data.children.length + ')</span>';
                        }
                        return s;
                    }
                },
                nodeIconArray: { "3": { "open": "dtree-icon-pulldown", "close": "dtree-icon-pullup" } },  // 自定扩展的二级非最后一级图标，从1开始
                leafIconArray: { "11": "dtree-icon-star" },  // 自定义扩展的二级最后一级图标，从11开始
                icon: ["3", "11"], // 使用
                response: { statusCode: 200, rootName: "data", treeId: "nodeId", title: "context" }
            });

            //$(function () {
            //    loadtree();
            //});

            //加载树
            function loadtree() {
                $.ajax({
                    url: '/Dormitory/DormitoryInfo/EstablishTree',
                    type: 'GET',
                    success: function (successdata) {
                        //console.log(successdata);
                        jstungid = successdata.data[0].nodeId;
                        jsfloorid = successdata.data[0].children[0].nodeId;
                        //可以重载所有基础参数
                        myDTree.reload(
                            'demoTree',
                            {
                                data: successdata

                            });
                    },
                    error: function (errordata) {
                        layer.msg("网络延迟！", { icon: 6, time: 2000 }, function () {

                        });
                    }
                });
            }
            // 绑定节点点击
            dtree.on("node('demoTree')", function (obj) {
                //console.log(obj);
                var dtreeobj = obj.param;
                //console.log(dtreeobj);

                //点击的是楼
                if (dtreeobj.level == "2") {
                    jstungid = dtreeobj.parentId;
                    jsfloorid = dtreeobj.nodeId;
                    getUninhabiteddormdata(jsstudentdata);
                }
                //点击的是栋
                if (dtreeobj.level == "1") {

                    var arry = obj.childParams;
                    if (arry.length > 0) {
                        jstungid = dtreeobj.nodeId;
                        for (var i = arry.length - 1; i >= 0; i--) {
                            if (arry[i].parentId != dtreeobj.nodeId) {
                                arry.splice(i, 1);
                            }
                        }
                        arry.sort(sortBy('nodeId'));
                        jsfloorid = arry[0].nodeId;
                        getUninhabiteddormdata(jsstudentdata);
                    } else {
                        $("#protable").css('display', 'none');
                        layer.msg("暂无楼层，无法进行操作！", { icon: 6, time: 2000 }, function () {

                        });
                    }
                }

                //console.log('-----------');
                //console.log(jstungid);
                //console.log(jsfloorid);
            });
            function sortBy(props) {
                return function (a, b) {
                    return a[props] - b[props];
                }
            }
            //发请求获取未满的宿舍
            function getUninhabiteddormdata(jsdata) {

                var loadindex = layer.load(1); //换了种风格

                var jsprosex = jsdata.Sex;
                if (jsdata.Sex == "男") {
                    jsprosex = true;
                }
                if (jsdata.Sex == "女") {
                    jsprosex = false;
                }
                $.ajax({
                    url: '/Dormitory/NewbornR/ChoiceInfo',
                    type: 'GET',
                    data: { sex: jsprosex, TungID: jstungid, FloorID: jsfloorid },
                    success: function (successdata) {
                        layer.close(loadindex);
                        //console.log(successdata);
                        if (successdata.Success) {
                            //console.log(successdata);
                            var data = successdata.Data;
                            if (data.length > 0) {
                                $("#protable").show();
                                binddormradio(data);
                            } else {
                                $("#protable").hide();
                                layer.msg('暂无可用房间，请联系后勤主任添加房间。', { icon: 6, time: 2000 }, function () {
                                });
                            }

                        } else {
                            layer.msg("请与管理员联系");
                        }
                    },
                    error: function (errordata) {
                        layer.close(loadindex);
                        layer.msg('网络异常！', { icon: 6, time: 2000 }, function () {
                        });
                    }
                });
            }

            //生成房间单选按钮
            function binddormradio(data) {
                //console.log("生成房间单选按钮");
                //console.log(data);
                $("#radiodiv").children().remove();
                for (var i = 0; i < data.length; i++) {
                    var radioobj = _.template($("#radionuban").html());
                    var radioobj1 = _.template($("#radionuban1").html());
                    var radiohtml;
                    if (i == 0) {
                        radiohtml = radioobj({ DormInfoID: data[i].ID, DormInfoName: data[i].DormInfoName });

                        getUninhabitedBeddata(data[i].ID, data[i]);
                    } else {
                        radiohtml = radioobj1({ DormInfoID: data[i].ID, DormInfoName: data[i].DormInfoName });
                    }
                    //console.log(radiohtml);
                    $("#radiodiv").append($(radiohtml));
                }
                form.render();
            }

            //发送请求获取未居住的床位
            function getUninhabitedBeddata(data, dorminfo) {
                //console.log("发送请求获取未居住的床位" + data);
                $.ajax({
                    url: '/Dormitory/DormitoryInfo/BedInfo',
                    type: 'GET',
                    data: { DorminfoID: data, datatype: jsdatatype },
                    success: function (SuccessData) {
                        if (SuccessData.Success) {
                            //console.log("发送请求获取未居住的床位ajax");
                            //console.log(SuccessData);
                            bindbedradio(SuccessData.Data, dorminfo);
                        } else {
                            //layer.msg("error");
                        }
                    },
                    error: function (ErrorData) {
                        // layer.msg("error");
                    }
                });
            }

            //生成床位单选按钮
            function bindbedradio(data, dorminfo) {
                //console.log(data);
                $("#bedradiodiv").children().remove();
                for (var i = 0; i < data.length; i++) {
                    var radioobj = _.template($("#bedradionuban").html());
                    var radioobj1 = _.template($("#bedradionuban1").html());
                    var radiohtml;
                    if (i == 0) {
                        radiohtml = radioobj({ BedID: data[i].Id, BenNo: data[i].BenNo });
                        bindbiaodan(data[i]);
                    } else {
                        radiohtml = radioobj1({ BedID: data[i].Id, BenNo: data[i].BenNo });
                    }
                    $("#bedradiodiv").append($(radiohtml));
                }
                form.render();
                bindbiaodan(dorminfo);
            }

            function bindbiaodan(data) {
                $("#DorminfoName").val(data.DormInfoName);
                $("#leadername").val(data.StudentName);
            }

            //房间单选按钮点击事件
            form.on('radio(dormfilter)', function (data) {
                dormid = data.value;
                console.log(data);
                //console.log(data.value); //被点击的radio的value值
                $.ajax({
                    url: '/Dormitory/DormitoryInfo/Checkdorm',
                    type: 'GET',
                    data: { DorminfoID: data.value },
                    success: function (Successdata) {
                        //console.log(Successdata);
                        if (Successdata.Success) {

                            //layer.msg('只想弱弱提示');
                            getUninhabitedBeddata(data.value, Successdata.Data);

                        } else {
                            layer.msg("error");
                        }
                    },
                    error: function () {
                        layer.msg("error");
                    }
                });
            });

            form.on('submit(postbtn)', function (data) {
                //console.log(data.elem) //被执行事件的元素DOM对象，一般为button对象
                //console.log(data.form) //被执行提交的form对象，一般在存在form标签时才会返回
                //console.log(data.field); //当前容器的全部表单字段，名值对形式：{name: value}
                //console.log(jsstudentdata.StudentNumber);
                //console.log(jsstudentdata);
                $.ajax({
                    url: '/Dormitory/NewbornR/ArrangeDorm',
                    type: 'POST',
                    data: { BedId: data.field.BedId, DormId: data.field.DormInformation, resultdata: jsstudentdata.StudentNumber },
                    success: function (SuccessData) {
                        console.log(SuccessData);
                        if (SuccessData.Success) {
                            layer.msg('安排到位。');
                            tableload();
                            $("#protable").hide();

                        } else {
                            form.msg("error");
                        }
                    },
                    error: function () {
                        layer.msg("error");
                    }
                });

                return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
            });

            //重新加载table
            function tableload() {
                table.reload('UninhabitedStudent', {
                    url: '/Dormitory/NewbornR/UninhabitedList'
                });
            }



            //var mytr = obj.tr[0];
            //$("tr").css("background", "");
            //$(mytr).css("background", "pink");
            //jsstudentdata = obj.data;
            ////console.log(jsstudentdata);
            //jsdatatype = jsstudentdata.datatype;
            //getUninhabiteddormdata(jsstudentdata);


            //加载学生房间信息

            function loadStuRoominfo() {

                var studentnumber = $("#studentnumber").val();

                $.post("/NewbornR/GetDongByStudent", { studentNumber: studentnumber }, function (data) {

                    console.log(data);

                    if (data.ErrorCode == 200) {

                        $("#Tung").text(data.Data.TungInfo);
                        $("#floor").text(data.Data.FloorInfo);
                        $("#room").text(data.Data.RoomInfo);
                        $("#bed").text(data.Data.BedInfo);
                    }
                });
            }

            loadStuRoominfo();



        });

    </script>
</body>
</html>


